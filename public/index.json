[{"authors":null,"categories":null,"content":"My name is Dina Arch and I am a third-year doctoral student emphasizing in quantitative methods in the social sciences under the guidance of Dr. Karen Nylund-Gibson. I earned my Bachelor of Science in Psychology from UC San Diego and minored in Business. I later earned a Master of Arts in Psychological Research, focusing in quantitative methods, from California State University, Fullerton, and an M.A. in Education from UCSB.\n","date":1554595200,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1554595200,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://dinaarch.netlify.app/author/dina-naji-arch/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/dina-naji-arch/","section":"authors","summary":"My name is Dina Arch and I am a third-year doctoral student emphasizing in quantitative methods in the social sciences under the guidance of Dr. Karen Nylund-Gibson. I earned my Bachelor of Science in Psychology from UC San Diego and minored in Business.","tags":null,"title":"Dina Naji Arch","type":"authors"},{"authors":null,"categories":null,"content":"Âê≥ÊÅ©ÈÅî is a professor of artificial intelligence at the Stanford AI Lab. His research interests include distributed robotics, mobile computing and programmable matter. He leads the Robotic Neurobiology group, which develops self-reconfiguring robots, systems of self-organizing robots, and mobile sensor networks.\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed neque elit, tristique placerat feugiat ac, facilisis vitae arcu. Proin eget egestas augue. Praesent ut sem nec arcu pellentesque aliquet. Duis dapibus diam vel metus tempus vulputate.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"bb560906b6a99893cc21387348c0b074","permalink":"https://dinaarch.netlify.app/author/%E5%90%B3%E6%81%A9%E9%81%94/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/%E5%90%B3%E6%81%A9%E9%81%94/","section":"authors","summary":"Âê≥ÊÅ©ÈÅî is a professor of artificial intelligence at the Stanford AI Lab. His research interests include distributed robotics, mobile computing and programmable matter. He leads the Robotic Neurobiology group, which develops self-reconfiguring robots, systems of self-organizing robots, and mobile sensor networks.","tags":null,"title":"Âê≥ÊÅ©ÈÅî","type":"authors"},{"authors":null,"categories":null,"content":"   Table of Contents  What you will learn Program overview Courses in this program Meet your instructor FAQs    What you will learn  Fundamental Python programming skills Statistical concepts and how to apply them in practice Gain experience with the Scikit, including data visualization with Plotly and data wrangling with Pandas  Program overview The demand for skilled data science practitioners is rapidly growing. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi.\nCourses in this program  Python basics Build a foundation in Python.   Visualization Learn how to visualize data with Plotly.   Statistics Introduction to statistics for data science.   Meet your instructor Dina Naji Arch FAQs Are there prerequisites? There are no prerequisites for the first course.\n How often do the courses run? Continuously, at your own pace.\n  Begin the course   ","date":1611446400,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1611446400,"objectID":"59c3ce8e202293146a8a934d37a4070b","permalink":"https://dinaarch.netlify.app/courses/example/","publishdate":"2021-01-24T00:00:00Z","relpermalink":"/courses/example/","section":"courses","summary":"An example of using Wowchemy's Book layout for publishing online courses.","tags":null,"title":"üìä Learn Data Science","type":"book"},{"authors":null,"categories":null,"content":"Build a foundation in Python.\n  1-2 hours per week, for 8 weeks\nLearn   Quiz What is the difference between lists and tuples? Lists\n Lists are mutable - they can be changed Slower than tuples Syntax: a_list = [1, 2.0, 'Hello world']  Tuples\n Tuples are immutable - they can\u0026rsquo;t be changed Tuples are faster than lists Syntax: a_tuple = (1, 2.0, 'Hello world')   Is Python case-sensitive? Yes\n","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609459200,"objectID":"17a31b92253d299002593b7491eedeea","permalink":"https://dinaarch.netlify.app/courses/example/python/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/courses/example/python/","section":"courses","summary":"Build a foundation in Python.\n","tags":null,"title":"Python basics","type":"book"},{"authors":null,"categories":null,"content":"Learn how to visualize data with Plotly.\n  1-2 hours per week, for 8 weeks\nLearn   Quiz When is a heatmap useful? Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n Write Plotly code to render a bar chart import plotly.express as px data_canada = px.data.gapminder().query(\u0026quot;country == 'Canada'\u0026quot;) fig = px.bar(data_canada, x='year', y='pop') fig.show()  ","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609459200,"objectID":"1b341b3479c8c6b1f807553b77e21b7c","permalink":"https://dinaarch.netlify.app/courses/example/visualization/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/courses/example/visualization/","section":"courses","summary":"Learn how to visualize data with Plotly.\n","tags":null,"title":"Visualization","type":"book"},{"authors":null,"categories":null,"content":"Introduction to statistics for data science.\n  1-2 hours per week, for 8 weeks\nLearn The general form of the normal probability density function is:\n$$ f(x) = \\frac{1}{\\sigma \\sqrt{2\\pi} } e^{-\\frac{1}{2}\\left(\\frac{x-\\mu}{\\sigma}\\right)^2} $$\n The parameter $\\mu$ is the mean or expectation of the distribution. $\\sigma$ is its standard deviation. The variance of the distribution is $\\sigma^{2}$.   Quiz What is the parameter $\\mu$? The parameter $\\mu$ is the mean or expectation of the distribution.\n","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609459200,"objectID":"6f4078728d71b1b791d39f218bf2bdb1","permalink":"https://dinaarch.netlify.app/courses/example/stats/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/courses/example/stats/","section":"courses","summary":"Introduction to statistics for data science.\n","tags":null,"title":"Statistics","type":"book"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Wowchemy\u0026rsquo;s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://dinaarch.netlify.app/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":[],"categories":"Labs","content":"library(haven) #read_sav()\rlibrary(mediation) # mediate() (Tingley, Yamamoto, Hirose, Keele, \u0026amp; Imai, 2014)\rlibrary(gvlma) # gvlma()\rlibrary(kableExtra) #kable()\rlibrary(corrr) #correlate()\rlibrary(psych) #mediate()\rlibrary(tidyverse)\r Mediation in R This exampes comes from a tutorial paper on mediation found here. This is an open source paper that shared the data set used in this example. The following is code and interpretation are based on this paper. Note that they use a different package to estimate the model and you will see that our estimates are very close, though not exact.\nKane, L. \u0026amp; Ashbaugh, A. R. (2017). Simple and parallel mediation: A tutorial exploring anxiety sensitivity, sensation seeking, and gender. The Quantitative Methods for Psychology, 13(3), 148\u0026ndash;165. doi:10.20982/tqmp.13.3.p148\nRead in data Downloaded from the journal website.\ntqmp \u0026lt;- read_sav(\u0026quot;p148.sav\u0026quot;)\r +\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;+\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;+\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026ndash;+ | Variable Name | Description | Notes | +===============+=============================================+============================================+ | Gender | Gender | 0 = female, 1= male | +\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;+\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;+\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026ndash;+ | ASI.TOT | Anxiety sensitivity index total scale score | higher scores mean more anxiety | +\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;+\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;+\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026ndash;+ | ASI.PHY | ASI-3 physical concerns subscale | higher values means more concerns | +\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;+\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;+\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026ndash;+ | ASI.SOC | ASI-3 social concerns subscale | higher values means more concerns | +\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;+\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;+\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026ndash;+ | ASI.COG | ASI-3 cognitive concerns subscale | higher values means more concerns | +\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;+\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;+\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026ndash;+ | SSs | UPPS-P sensation seeking subscale | higher values means more sensation seeking | +\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;+\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;+\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026ndash;+ | NUs | UPPS-P negative urgency subscale | higher values means more negative urgency | +\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;+\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;+\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026ndash;+\nCorrelation Just to explore the variables and their relationships we look at a correlation table.\n#Pretty correlation table:\rtab_02 = tqmp%\u0026gt;% correlate() %\u0026gt;%\rshave(upper = TRUE) %\u0026gt;%\rfashion(decimals = 2, na_print = \u0026quot;‚Äî\u0026quot;) tab_02 %\u0026gt;% kable()\r \r\r\rterm \rGender \rASI.TOT \rASI.PHY \rASI.SOC \rASI.COG \rSSs \rNUs \r\r\r\r\rGender \r‚Äî \r‚Äî \r‚Äî \r‚Äî \r‚Äî \r‚Äî \r‚Äî \r\r\rASI.TOT \r-.12 \r‚Äî \r‚Äî \r‚Äî \r‚Äî \r‚Äî \r‚Äî \r\r\rASI.PHY \r-.17 \r.89 \r‚Äî \r‚Äî \r‚Äî \r‚Äî \r‚Äî \r\r\rASI.SOC \r-.09 \r.80 \r.54 \r‚Äî \r‚Äî \r‚Äî \r‚Äî \r\r\rASI.COG \r-.05 \r.90 \r.75 \r.57 \r‚Äî \r‚Äî \r‚Äî \r\r\rSSs \r.19 \r-.23 \r-.27 \r-.17 \r-.14 \r‚Äî \r‚Äî \r\r\rNUs \r.02 \r.38 \r.30 \r.30 \r.39 \r.13 \r‚Äî \r\r\r\rSimple Mediation Model This example is from the paper directly.\n  Independent Variable (X): Gender.\n  Dependent Variable (Y): Sensation seeking (SSs)\n  Mediator (M): Anxiety sensitivity (ASI.TOT)\n  Figure 1. (from paper)\n   Testing Statistical Assumptions Before we dive into analyzing the mediation model, we first check the statistical assumptions. Please follow along on page 151 in the tutorial paper to see how they interpreted the assumptions for this mediation model.\nLinearity, Homoscedasticity, Normality of estimation error Linearity:\u0026ldquo;To examine these criteria for a simple mediation, you need to plot residuals against predicted values in four regressions: X predicting Y (c), X predicting M (a), M predicting Y (b), and X and M predicting Y (combined linearity of b and c').\u0026rdquo; (pg. 151)\nHomoscedasticity: \u0026ldquo;To check homoscedasticity, return to the same plot that we created to examine linearity, but this time look for consistency in vertical range across the X axis. In other words, see if the data spreads on the Y axis consistently and equally throughout the plot, resembling a rectangle.\u0026rdquo; (pg. 152)\nNormality of estimation error: \u0026ldquo;To examine this assumption, we can create a Q-Q plot with the residuals we saved from the regression\u0026rdquo; (pg. 152)\nIn R, plot 1 creates a plot of the residuals against the predicted values and plot 2 creates a Q-Q plot of the residuals.\n# X predicting Y (path c) fit_c \u0026lt;- lm(SSs ~ Gender, data=tqmp) plot(fit_c, c(1,2))\r # X predicting M (path a)\rfit_a \u0026lt;- lm(ASI.TOT ~ Gender, data=tqmp) plot(fit_a, c(1,2))\r # M predicting Y (path b)\rfit_b \u0026lt;- lm(SSs ~ ASI.TOT, data=tqmp) plot(fit_b, c(1,2))\r # X and M predicting Y (b and c')\rfit_cb \u0026lt;- lm(SSs ~ Gender + ASI.TOT, data=tqmp) plot(fit_cb, c(1,2))\r Simple Mediation R Code Important note! There are two mediate() functions used in this lab. One comes from the psych package and the other comes from the mediation package. You must identify the package in the code like shown below to specify which mediate() function you\u0026rsquo;re using. For simple mediation with one mediator, we use mediation::mediate(). For multiple mediators, we use psych::mediate() shown in the next example.\nRecall the steps to test for a mediation effect using one mediator (See slide 15 in lecture):\n# Model 1: M regressed on X, path a\rfit_a \u0026lt;- lm(ASI.TOT ~ Gender, data=tqmp) summary(fit_a)\r ## ## Call:\r## lm(formula = ASI.TOT ~ Gender, data = tqmp)\r## ## Residuals:\r## Min 1Q Median 3Q Max ## -24.135 -11.343 -3.135 10.657 47.449 ## ## Coefficients:\r## Estimate Std. Error t value Pr(\u0026gt;|t|) ## (Intercept) 26.135 1.236 21.151 \u0026lt;2e-16 ***\r## Gender -3.584 1.750 -2.048 0.0415 * ## ---\r## Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r## ## Residual standard error: 15.03 on 293 degrees of freedom\r## Multiple R-squared: 0.01411,\tAdjusted R-squared: 0.01074 ## F-statistic: 4.192 on 1 and 293 DF, p-value: 0.0415\r # Model 2: Y is regressed on X, path c\rfit_c \u0026lt;- lm(SSs ~ Gender, data=tqmp) summary(fit_c)\r ## ## Call:\r## lm(formula = SSs ~ Gender, data = tqmp)\r## ## Residuals:\r## Min 1Q Median 3Q Max ## -1.88379 -0.38379 0.01295 0.44955 1.34628 ## ## Coefficients:\r## Estimate Std. Error t value Pr(\u0026gt;|t|) ## (Intercept) 2.65372 0.04778 55.538 \u0026lt; 2e-16 ***\r## Gender 0.23007 0.06769 3.399 0.00077 ***\r## ---\r## Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r## ## Residual standard error: 0.5813 on 293 degrees of freedom\r## Multiple R-squared: 0.03793,\tAdjusted R-squared: 0.03465 ## F-statistic: 11.55 on 1 and 293 DF, p-value: 0.0007702\r # Model 3: Y is regressed on X and M (paths c' and b)\rfit_cb \u0026lt;- lm(SSs ~ Gender+ ASI.TOT, data=tqmp) summary(fit_cb)\r ## ## Call:\r## lm(formula = SSs ~ Gender + ASI.TOT, data = tqmp)\r## ## Residuals:\r## Min 1Q Median 3Q Max ## -1.90432 -0.35627 0.01137 0.43682 1.36129 ## ## Coefficients:\r## Estimate Std. Error t value Pr(\u0026gt;|t|) ## (Intercept) 2.864067 0.074417 38.487 \u0026lt; 2e-16 ***\r## Gender 0.201224 0.066792 3.013 0.002816 ** ## ASI.TOT -0.008049 0.002213 -3.636 0.000327 ***\r## ---\r## Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r## ## Residual standard error: 0.5695 on 292 degrees of freedom\r## Multiple R-squared: 0.07961,\tAdjusted R-squared: 0.07331 ## F-statistic: 12.63 on 2 and 292 DF, p-value: 5.49e-06\r # Path b (not a required step to test for mediation but will be used in the write up)\rfit_b \u0026lt;- lm(SSs ~ ASI.TOT, data=tqmp) summary(fit_b)\r ## ## Call:\r## lm(formula = SSs ~ ASI.TOT, data = tqmp)\r## ## Residuals:\r## Min 1Q Median 3Q Max ## -1.80681 -0.41348 0.00638 0.40406 1.32333 ## ## Coefficients:\r## Estimate Std. Error t value Pr(\u0026gt;|t|) ## (Intercept) 2.983622 0.063814 46.755 \u0026lt; 2e-16 ***\r## ASI.TOT -0.008841 0.002228 -3.968 9.11e-05 ***\r## ---\r## Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r## ## Residual standard error: 0.5773 on 293 degrees of freedom\r## Multiple R-squared: 0.05101,\tAdjusted R-squared: 0.04777 ## F-statistic: 15.75 on 1 and 293 DF, p-value: 9.108e-05\r Test for Indirect Effect As mentioned in lecture (slide 17), there are multiple ways to estimate the indirect effect and its SE. The one we will use is the bootstrapped confidence intervals (similar to the tutorial paper as noted on page 153). In mediation::mediate(), we enter path a and combined path c and b to test the indirect effect using bootstrapping procedures. In the tutorial paper, they used 10,000 bootstrap samples (pg 153). This may take a minute to run. You can cache the results by using {r, cache = TRUE} in the top part of the code chunk so it doesn\u0026rsquo;t need to run every time you knit. You may decrease the number to 1,000 if you find that\u0026rsquo;s taking too long to run (the results may not be identical to the paper, however).\nIn the output, we look at the ACME (or Average Causal Mediation Effect) to evaluate the indirect effect of the mediator. The ADE (or Average Direct Effects) provides the direct effect estimate, and the Total Effect provides the combined indirect and direct effects estimate. Prop. Mediated is the ratio of these estimates (which we will not be using).\nfitMed \u0026lt;- mediation::mediate(fit_a, fit_cb, treat=\u0026quot;Gender\u0026quot;, mediator=\u0026quot;ASI.TOT\u0026quot;, boot= TRUE, boot.ci.type = \u0026quot;perc\u0026quot;, sims = 10000)\rsummary(fitMed)\r ## ## Causal Mediation Analysis ## ## Nonparametric Bootstrap Confidence Intervals with the Percentile Method\r## ## Estimate 95% CI Lower 95% CI Upper p-value ## ACME 0.028847 0.000593 0.07 0.0456 * ## ADE 0.201224 0.069159 0.33 0.0024 ** ## Total Effect 0.230071 0.099398 0.36 0.0006 ***\r## Prop. Mediated 0.125384 0.002647 0.37 0.0462 * ## ---\r## Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r## ## Sample Size Used: 295 ## ## ## Simulations: 10000\r    Note: This figure was taken from the paper.\nFull or Partial Mediation? In this example, the direct effect is still significant when accounting the mediator. We also see that the direct effect with the mediator (c' = 0.201) is less than the total effect (c = 0.230). Thus, this is evidence of partial mediation (see Slide 10 in lecture).\nSample Write-Up Note: that the estimates from our estimation of the model here is slightly off from what is reported in the manuscript. They used the PROCESSmacro and we use the mediate package.\nResults from a simple mediation analysis indicated that gender is indirectly related to sensation seeking through its relationship with anxiety sensitivity. First, as can be seen in Figure 7, men reported less anxiety sensitivity than women (a = ‚àí3.584, p = .042), and lower reported anxiety sensitivity was subsequently related to more sensation seeking (b = ‚àí0.008, p =\u0026lt; .001). A 95% bias-corrected confidence interval based on 10,000 bootstrap samples indicated that the indirect effect (ab = 0.029) was entirely above zero (0.003 to 0.074). Moreover, men reported greater sensation seeking even after taking into account gender\u0026rsquo;s indirect effect through anxiety sensitivity (c' = 0.201, p = .003).\nComplex Mediation with Multiple Mediators Here, we continue the tutorial paper\u0026rsquo;s example and adding on multiple mediators (three) into the model: Physical, Cognitive, and Social Concerns.\n  Independent Variable (X): Gender.\n  Dependent Variable (Y): Sensation seeking (SSs)\n  Mediator 1 (M1): Physical Concerns (ASI.PHY)\n  Mediator 2 (M2): Social Concerns (ASI.SOC)\n  Mediator 3 (M3): Cognitive Concerns (ASI.COG)\n     Testing Statistical Assumptions From the paper: \u0026ldquo;We verified the assumptions using the same methods we used for simple mediation, only this time we conducted seven additional regressions (i.e., X [gender] predicting each mediator [the three anxiety sensitivity dimensions]; each mediator predicting Y [sensation seeking]; X and all three mediators predicting Y ; note: we already had regressed Y on X for the simple mediation).\u0026rdquo; (pg 156).\nWe won\u0026rsquo;t run all seven for this lab, but just note that this is what needs to be done with multiple mediators.\nComplex Mediation R Code We are using the psych::mediate() function to specify multiple mediators (you can do this in the other package). This function will go through the steps of mediation as well as provide the tests of indirect effects for each mediator (three). An important note (again), the results will only show up when you knit the markdown. We spent many, many hours on this only to find that knitting reveals the specific indirect effect estimates and their significance tests.\nTest for Indirect Effect fitComplex \u0026lt;- psych::mediate(SSs ~ Gender + (ASI.PHY) + (ASI.SOC)+ (ASI.COG), n.iter = 10000, data = tqmp)\r fitComplex\r ## ## Mediation/Moderation Analysis ## Call: psych::mediate(y = SSs ~ Gender + (ASI.PHY) + (ASI.SOC) + (ASI.COG), ## data = tqmp, n.iter = 10000)\r## ## The DV (Y) was SSs . The IV (X) was Gender . The mediating variable(s) = ASI.PHY ASI.SOC ASI.COG .\r## ## Total effect(c) of Gender on SSs = 0.23 S.E. = 0.07 t = 3.4 df= 293 with p = 0.00077\r## Direct effect (c') of Gender on SSs removing ASI.PHY ASI.SOC ASI.COG = 0.17 S.E. = 0.07 t = 2.57 df= 290 with p = 0.011\r## Indirect effect (ab) of Gender on SSs through ASI.PHY ASI.SOC ASI.COG = 0.06 ## Mean bootstrapped indirect effect = 0.06 with standard error = 0.03 Lower CI = 0.01 Upper CI = 0.12\r## R = 0.32 R2 = 0.1 F = 8.2 on 4 and 290 DF p-value: 2.96e-07 ## ## To see the longer output, specify short = FALSE in the print statement or ask for the summary\r Sample Write-Up Results from a parallel mediation analysis indicated that gender is indirectly related to sensation seeking through its relationship with the Physical Concerns subscale of anxiety sensitivity. This dimension pertains to the fear of physiological sensations because of the belief that they may have negative consequences and are life-threatening. First, as can be seen in Figure 9, men reported less fear of physiological sensations than women (a1 = ‚àí2.021, p = .004), and lower reported fear of physiological sensations was subsequently related to more sensation seeking (b1 = ‚àí0.029, p \u0026lt; .001). A 95% bias-corrected confidence interval based on 10,000 bootstrap samples indicated that the indirect effect through fear of physiological sensations (a1*b1 = 0.058), holding all other mediators constant, was entirely above zero (0.017 to 0.132). In contrast, the indirect effects through both the Social and the Cognitive Concerns subscales of anxiety sensitivity were not different than zero (‚àí0.004 to 0.038 and ‚àí0.047 to 0.005, respectively; see Figure 9 (in the paper) for the effects associated with these pathways). Moreover, men reported greater sensation seeking even when taking into account gender\u0026rsquo;s indirect effect through all three dimensions of anxiety sensitivity (c' = 0.172, p = .011).\nNext steps and resources There are extensions of these models. It is possible to add moderators to this. This would allow for the mediatoinal relationships to vary by levels of the moderator. There are resources out there to do this, which we won\u0026rsquo;t cover here. My hope is that you will have a foundation in moderation and mediation to extend your own knowledge.\nThis resources was a helpful way to learn about mediation and the different package in R.\n","date":1639440000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1639540341,"objectID":"3ae766071f7ddbf10e5cbd86b23b9cc9","permalink":"https://dinaarch.netlify.app/post/mediation-lab/","publishdate":"2021-12-14T00:00:00Z","relpermalink":"/post/mediation-lab/","section":"post","summary":"library(haven) #read_sav()\rlibrary(mediation) # mediate() (Tingley, Yamamoto, Hirose, Keele, \u0026amp; Imai, 2014)\rlibrary(gvlma) # gvlma()\rlibrary(kableExtra) #kable()\rlibrary(corrr) #correlate()\rlibrary(psych) #mediate()\rlibrary(tidyverse)\r Mediation in R This exampes comes from a tutorial paper on mediation found here.","tags":["r markdown","mediation","data analysis"],"title":"Mediation Lab","type":"post"},{"authors":[],"categories":"Labs","content":"knitr::opts_chunk$set(echo = TRUE,\rwarning = FALSE,\rmessage = FALSE)\rlibrary(stringr) # str_to_lower()\rlibrary(janitor) # clean_names()\rlibrary(palmerpenguins) # penguins\rlibrary(sjmisc) # move_columns\rlibrary(tidyverse)\r Let\u0026rsquo;s use a dataset called penguins in the palmerpenguins package (Reference: Horst AM, Hill AP, \u0026amp; Gorman KB, 2020)\nRead in and view data data(\u0026quot;penguins\u0026quot;)\rhead(penguins_raw) # reads first 6 rows\r ## # A tibble: 6 x 17\r## studyName `Sample Number` Species Region Island Stage `Individual ID`\r## \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; ## 1 PAL0708 1 Adelie Pengu~ Anvers Torger~ Adult,~ N1A1 ## 2 PAL0708 2 Adelie Pengu~ Anvers Torger~ Adult,~ N1A2 ## 3 PAL0708 3 Adelie Pengu~ Anvers Torger~ Adult,~ N2A1 ## 4 PAL0708 4 Adelie Pengu~ Anvers Torger~ Adult,~ N2A2 ## 5 PAL0708 5 Adelie Pengu~ Anvers Torger~ Adult,~ N3A1 ## 6 PAL0708 6 Adelie Pengu~ Anvers Torger~ Adult,~ N3A2 ## # ... with 10 more variables: Clutch Completion \u0026lt;chr\u0026gt;, Date Egg \u0026lt;date\u0026gt;,\r## # Culmen Length (mm) \u0026lt;dbl\u0026gt;, Culmen Depth (mm) \u0026lt;dbl\u0026gt;,\r## # Flipper Length (mm) \u0026lt;dbl\u0026gt;, Body Mass (g) \u0026lt;dbl\u0026gt;, Sex \u0026lt;chr\u0026gt;,\r## # Delta 15 N (o/oo) \u0026lt;dbl\u0026gt;, Delta 13 C (o/oo) \u0026lt;dbl\u0026gt;, Comments \u0026lt;chr\u0026gt;\r names(penguins_raw) # lists variable names\r ## [1] \u0026quot;studyName\u0026quot; \u0026quot;Sample Number\u0026quot; \u0026quot;Species\u0026quot; ## [4] \u0026quot;Region\u0026quot; \u0026quot;Island\u0026quot; \u0026quot;Stage\u0026quot; ## [7] \u0026quot;Individual ID\u0026quot; \u0026quot;Clutch Completion\u0026quot; \u0026quot;Date Egg\u0026quot; ## [10] \u0026quot;Culmen Length (mm)\u0026quot; \u0026quot;Culmen Depth (mm)\u0026quot; \u0026quot;Flipper Length (mm)\u0026quot;\r## [13] \u0026quot;Body Mass (g)\u0026quot; \u0026quot;Sex\u0026quot; \u0026quot;Delta 15 N (o/oo)\u0026quot; ## [16] \u0026quot;Delta 13 C (o/oo)\u0026quot; \u0026quot;Comments\u0026quot;\r summary(penguins_raw) # provides some descriptive statistics for each variable\r ## studyName Sample Number Species Region ## Length:344 Min. : 1.00 Length:344 Length:344 ## Class :character 1st Qu.: 29.00 Class :character Class :character ## Mode :character Median : 58.00 Mode :character Mode :character ## Mean : 63.15 ## 3rd Qu.: 95.25 ## Max. :152.00 ## ## Island Stage Individual ID Clutch Completion ## Length:344 Length:344 Length:344 Length:344 ## Class :character Class :character Class :character Class :character ## Mode :character Mode :character Mode :character Mode :character ## ## ## ## ## Date Egg Culmen Length (mm) Culmen Depth (mm) Flipper Length (mm)\r## Min. :2007-11-09 Min. :32.10 Min. :13.10 Min. :172.0 ## 1st Qu.:2007-11-28 1st Qu.:39.23 1st Qu.:15.60 1st Qu.:190.0 ## Median :2008-11-09 Median :44.45 Median :17.30 Median :197.0 ## Mean :2008-11-27 Mean :43.92 Mean :17.15 Mean :200.9 ## 3rd Qu.:2009-11-16 3rd Qu.:48.50 3rd Qu.:18.70 3rd Qu.:213.0 ## Max. :2009-12-01 Max. :59.60 Max. :21.50 Max. :231.0 ## NA's :2 NA's :2 NA's :2 ## Body Mass (g) Sex Delta 15 N (o/oo) Delta 13 C (o/oo)\r## Min. :2700 Length:344 Min. : 7.632 Min. :-27.02 ## 1st Qu.:3550 Class :character 1st Qu.: 8.300 1st Qu.:-26.32 ## Median :4050 Mode :character Median : 8.652 Median :-25.83 ## Mean :4202 Mean : 8.733 Mean :-25.69 ## 3rd Qu.:4750 3rd Qu.: 9.172 3rd Qu.:-25.06 ## Max. :6300 Max. :10.025 Max. :-23.79 ## NA's :2 NA's :14 NA's :13 ## Comments ## Length:344 ## Class :character ## Mode :character ## ## ## ##  How to read in data and make note of the missing values:\ndata \u0026lt;- read_csv(\u0026quot;data.csv\u0026quot;, na = c(\u0026quot;-999\u0026quot;, \u0026quot;NA\u0026quot;, \u0026quot;000\u0026quot;)) #note: the `na` argument only works for \u0026quot;read_csv\u0026quot; and not \u0026quot;read_sav.\u0026quot;\r Clean names We see that the variable names are not \u0026ldquo;clean.\u0026rdquo; As in, they have spaces and capital letters. Usually, we want to use a format called \u0026ldquo;snake case\u0026rdquo;, where we have lower case letters and spaces are replaced with underscores. We can easily do this with the clean_names() function in the janitor package:\npenguins_new \u0026lt;- penguins_raw %\u0026gt;% clean_names()\r#Compare names\rnames(penguins_new)\r ## [1] \u0026quot;study_name\u0026quot; \u0026quot;sample_number\u0026quot; \u0026quot;species\u0026quot; ## [4] \u0026quot;region\u0026quot; \u0026quot;island\u0026quot; \u0026quot;stage\u0026quot; ## [7] \u0026quot;individual_id\u0026quot; \u0026quot;clutch_completion\u0026quot; \u0026quot;date_egg\u0026quot; ## [10] \u0026quot;culmen_length_mm\u0026quot; \u0026quot;culmen_depth_mm\u0026quot; \u0026quot;flipper_length_mm\u0026quot;\r## [13] \u0026quot;body_mass_g\u0026quot; \u0026quot;sex\u0026quot; \u0026quot;delta_15_n_o_oo\u0026quot; ## [16] \u0026quot;delta_13_c_o_oo\u0026quot; \u0026quot;comments\u0026quot;\r names(penguins_raw)\r ## [1] \u0026quot;studyName\u0026quot; \u0026quot;Sample Number\u0026quot; \u0026quot;Species\u0026quot; ## [4] \u0026quot;Region\u0026quot; \u0026quot;Island\u0026quot; \u0026quot;Stage\u0026quot; ## [7] \u0026quot;Individual ID\u0026quot; \u0026quot;Clutch Completion\u0026quot; \u0026quot;Date Egg\u0026quot; ## [10] \u0026quot;Culmen Length (mm)\u0026quot; \u0026quot;Culmen Depth (mm)\u0026quot; \u0026quot;Flipper Length (mm)\u0026quot;\r## [13] \u0026quot;Body Mass (g)\u0026quot; \u0026quot;Sex\u0026quot; \u0026quot;Delta 15 N (o/oo)\u0026quot; ## [16] \u0026quot;Delta 13 C (o/oo)\u0026quot; \u0026quot;Comments\u0026quot;\r Move variable names We can use the move_columns() function to rearrange our variable names. Lets say we want to move clutch_completion to the left of body_mass_g:\npenguins_move \u0026lt;- penguins_new %\u0026gt;% move_columns(clutch_completion, .before = body_mass_g)\rnames(penguins_move)\r ## [1] \u0026quot;study_name\u0026quot; \u0026quot;sample_number\u0026quot; \u0026quot;species\u0026quot; ## [4] \u0026quot;region\u0026quot; \u0026quot;island\u0026quot; \u0026quot;stage\u0026quot; ## [7] \u0026quot;individual_id\u0026quot; \u0026quot;date_egg\u0026quot; \u0026quot;culmen_length_mm\u0026quot; ## [10] \u0026quot;culmen_depth_mm\u0026quot; \u0026quot;flipper_length_mm\u0026quot; \u0026quot;clutch_completion\u0026quot;\r## [13] \u0026quot;body_mass_g\u0026quot; \u0026quot;sex\u0026quot; \u0026quot;delta_15_n_o_oo\u0026quot; ## [16] \u0026quot;delta_13_c_o_oo\u0026quot; \u0026quot;comments\u0026quot;\r Recoding Examine class Let\u0026rsquo;s examine the clutch_completion variable. (a character string denoting if the study nest observed with a full clutch, i.e., 2 eggs). Let\u0026rsquo;s see what the labels look like using unique():\nunique(penguins_new$clutch_completion)\r ## [1] \u0026quot;Yes\u0026quot; \u0026quot;No\u0026quot;\r Right now, the levels are Yes and No. Let\u0026rsquo;s also check the variable type using class():\nclass(penguins_new$clutch_completion)\r ## [1] \u0026quot;character\u0026quot;\r Let\u0026rsquo;s make this a factor.\nCreate factor Since this variable is not a character (but a factor), we need to convert it. We can do that using factor():\npenguins_factor \u0026lt;- penguins_new %\u0026gt;% mutate(clutch_factor = factor(clutch_completion))\r Let\u0026rsquo;s check the variable again:\nclass(penguins_factor$clutch_factor)\r ## [1] \u0026quot;factor\u0026quot;\r unique(penguins_factor$clutch_factor)\r ## [1] Yes No ## Levels: No Yes\r Recoding a factor Let\u0026rsquo;s say we want to recode our labels from Yes and No to 1 and 0:\npenguins_recoded \u0026lt;- penguins_factor %\u0026gt;% mutate(clutch_recoded = recode(clutch_factor,\u0026quot;Yes\u0026quot; = \u0026quot;1\u0026quot;, \u0026quot;No\u0026quot; = \u0026quot;0\u0026quot;))\r class(penguins_recoded$clutch_recoded)\r ## [1] \u0026quot;factor\u0026quot;\r unique(penguins_recoded$clutch_recoded)\r ## [1] 1 0\r## Levels: 0 1\r Recoding a character into a factor Let\u0026rsquo;s look at another variable in the penguins dataset: Sex of the penguin:\nclass(penguins_new$sex)\r ## [1] \u0026quot;character\u0026quot;\r unique(penguins_new$sex)\r ## [1] \u0026quot;MALE\u0026quot; \u0026quot;FEMALE\u0026quot; NA\r Let\u0026rsquo;s say we didn\u0026rsquo;t do the process above, and it was still in character format. We can combine those two steps by recoding character variables into factors (from MALE and FEMALE to 0 and 1) using recode_factor():\npenguins_sex_recoded \u0026lt;- penguins_new %\u0026gt;% mutate(sex_recoded = recode_factor(sex,\u0026quot;MALE\u0026quot; = \u0026quot;0\u0026quot;, \u0026quot;FEMALE\u0026quot; = \u0026quot;1\u0026quot;))\r Lets check the variable again:\nclass(penguins_sex_recoded$sex_recoded)\r ## [1] \u0026quot;factor\u0026quot;\r unique(penguins_sex_recoded$sex_recoded)\r ## [1] 0 1 \u0026lt;NA\u0026gt;\r## Levels: 0 1\r Side Note. I also wanted to make a quick note on what happens when you select the variable of interest first vs. not:\npenguins_recoded_select \u0026lt;- penguins_new %\u0026gt;% select(sex) %\u0026gt;% mutate(sex_recoded = recode_factor(sex,\u0026quot;MALE\u0026quot; = \u0026quot;0\u0026quot;, \u0026quot;FEMALE\u0026quot; = \u0026quot;1\u0026quot;))\rhead(penguins_recoded_select)\r ## # A tibble: 6 x 2\r## sex sex_recoded\r## \u0026lt;chr\u0026gt; \u0026lt;fct\u0026gt; ## 1 MALE 0 ## 2 FEMALE 1 ## 3 FEMALE 1 ## 4 \u0026lt;NA\u0026gt; \u0026lt;NA\u0026gt; ## 5 FEMALE 1 ## 6 MALE 0\r head(penguins_sex_recoded)\r ## # A tibble: 6 x 18\r## study_name sample_number species region island stage individual_id\r## \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; ## 1 PAL0708 1 Adelie Penguin~ Anvers Torger~ Adult, ~ N1A1 ## 2 PAL0708 2 Adelie Penguin~ Anvers Torger~ Adult, ~ N1A2 ## 3 PAL0708 3 Adelie Penguin~ Anvers Torger~ Adult, ~ N2A1 ## 4 PAL0708 4 Adelie Penguin~ Anvers Torger~ Adult, ~ N2A2 ## 5 PAL0708 5 Adelie Penguin~ Anvers Torger~ Adult, ~ N3A1 ## 6 PAL0708 6 Adelie Penguin~ Anvers Torger~ Adult, ~ N3A2 ## # ... with 11 more variables: clutch_completion \u0026lt;chr\u0026gt;, date_egg \u0026lt;date\u0026gt;,\r## # culmen_length_mm \u0026lt;dbl\u0026gt;, culmen_depth_mm \u0026lt;dbl\u0026gt;, flipper_length_mm \u0026lt;dbl\u0026gt;,\r## # body_mass_g \u0026lt;dbl\u0026gt;, sex \u0026lt;chr\u0026gt;, delta_15_n_o_oo \u0026lt;dbl\u0026gt;, delta_13_c_o_oo \u0026lt;dbl\u0026gt;,\r## # comments \u0026lt;chr\u0026gt;, sex_recoded \u0026lt;fct\u0026gt;\r Recoding multiple variables The dataset doesn\u0026rsquo;t have any two variables that need to be recoded the same, but let\u0026rsquo;s recode both sex and clutch_completion at the same time. Note: this code should be used if you have two variables that need to have the same recoding, but it looks like this works too.\npenguins_multiple \u0026lt;- penguins_new %\u0026gt;% mutate_at(c(\u0026quot;sex\u0026quot;, \u0026quot;clutch_completion\u0026quot;),\r~ recode_factor(., \u0026quot;MALE\u0026quot; = \u0026quot;0\u0026quot;, \u0026quot;FEMALE\u0026quot; = \u0026quot;1\u0026quot;,\r\u0026quot;Yes\u0026quot; = \u0026quot;1\u0026quot;, \u0026quot;No\u0026quot; = \u0026quot;0\u0026quot;))\rpenguins_multiple %\u0026gt;% select(sex, clutch_completion) %\u0026gt;% head()\r ## # A tibble: 6 x 2\r## sex clutch_completion\r## \u0026lt;fct\u0026gt; \u0026lt;fct\u0026gt; ## 1 0 1 ## 2 1 1 ## 3 1 1 ## 4 \u0026lt;NA\u0026gt; 1 ## 5 1 1 ## 6 0 1\r Creating reference variables Recall slide 33 in the Multiple Regression lecture:\n   Remember that when we enter a categorical variable into the model using lm(), R creates the reference variable for us, and picks the first category as the reference category. For example, let\u0026rsquo;s look at the species variable:\nclass(penguins_new$species)\r ## [1] \u0026quot;character\u0026quot;\r unique(penguins_new$species)\r ## [1] \u0026quot;Adelie Penguin (Pygoscelis adeliae)\u0026quot; ## [2] \u0026quot;Gentoo penguin (Pygoscelis papua)\u0026quot; ## [3] \u0026quot;Chinstrap penguin (Pygoscelis antarctica)\u0026quot;\r Let\u0026rsquo;s clean this variable. First, let\u0026rsquo;s make the labels lowercase using str_to_lower():\npenguin_species \u0026lt;- penguins_new %\u0026gt;% mutate(species = str_to_lower(species))\runique(penguin_species$species)\r ## [1] \u0026quot;adelie penguin (pygoscelis adeliae)\u0026quot; ## [2] \u0026quot;gentoo penguin (pygoscelis papua)\u0026quot; ## [3] \u0026quot;chinstrap penguin (pygoscelis antarctica)\u0026quot;\r Now, let\u0026rsquo;s just keep the simple names of the penguins: adelie, gentoo, and chinstrap using the separate() function:\npenguins_species_clean \u0026lt;- penguin_species %\u0026gt;% separate(species, into = c(\u0026quot;species\u0026quot;, \u0026quot;delete\u0026quot;), sep = \u0026quot; penguin\u0026quot;) %\u0026gt;% select(-delete)\runique(penguins_species_clean$species)\r ## [1] \u0026quot;adelie\u0026quot; \u0026quot;gentoo\u0026quot; \u0026quot;chinstrap\u0026quot;\r class(penguins_species_clean$species)\r ## [1] \u0026quot;character\u0026quot;\r Let\u0026rsquo;s also convert this new variable into a factor:\npenguins_species_clean$species \u0026lt;- factor(penguins_species_clean$species)\runique(penguins_species_clean$species)\r ## [1] adelie gentoo chinstrap\r## Levels: adelie chinstrap gentoo\r class(penguins_species_clean$species)\r ## [1] \u0026quot;factor\u0026quot;\r Let\u0026rsquo;s quickly run a simple linear regression using the species variable without creating the reference variables. Let\u0026rsquo;s predict flipper_length_mm from species:\nmodel_1 \u0026lt;- lm(flipper_length_mm ~ species, data = penguins_species_clean)\rsummary(model_1)\r ## ## Call:\r## lm(formula = flipper_length_mm ~ species, data = penguins_species_clean)\r## ## Residuals:\r## Min 1Q Median 3Q Max ## -17.9536 -4.8235 0.0464 4.8130 20.0464 ## ## Coefficients:\r## Estimate Std. Error t value Pr(\u0026gt;|t|) ## (Intercept) 189.9536 0.5405 351.454 \u0026lt; 2e-16 ***\r## specieschinstrap 5.8699 0.9699 6.052 3.79e-09 ***\r## speciesgentoo 27.2333 0.8067 33.760 \u0026lt; 2e-16 ***\r## ---\r## Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r## ## Residual standard error: 6.642 on 339 degrees of freedom\r## (2 observations deleted due to missingness)\r## Multiple R-squared: 0.7782,\tAdjusted R-squared: 0.7769 ## F-statistic: 594.8 on 2 and 339 DF, p-value: \u0026lt; 2.2e-16\r Here, it automatically created the reference variables and made adelie penguins the reference category. What if we want to compare our results to gentoo penguins? We can do that by converting the chinstrap and adelie into their own variables using ifelse()\nchinstrap \u0026lt;- ifelse(penguins_species_clean$species == 'chinstrap', 1, 0)\radelie \u0026lt;- ifelse(penguins_species_clean$species == 'adelie', 1, 0)\r Then, we add them to our dataset using cbind():\npenguins_reference \u0026lt;- penguins_species_clean %\u0026gt;% cbind(chinstrap, adelie)\r Let\u0026rsquo;s look at the model again with gentoo as the reference variable. Instead of species, we use chinstrap and adelie:\nmodel_2 \u0026lt;- lm(flipper_length_mm ~ chinstrap + adelie, data = penguins_reference)\rsummary(model_2)\r ## ## Call:\r## lm(formula = flipper_length_mm ~ chinstrap + adelie, data = penguins_reference)\r## ## Residuals:\r## Min 1Q Median 3Q Max ## -17.9536 -4.8235 0.0464 4.8130 20.0464 ## ## Coefficients:\r## Estimate Std. Error t value Pr(\u0026gt;|t|) ## (Intercept) 217.1870 0.5988 362.68 \u0026lt;2e-16 ***\r## chinstrap -21.3635 1.0036 -21.29 \u0026lt;2e-16 ***\r## adelie -27.2333 0.8067 -33.76 \u0026lt;2e-16 ***\r## ---\r## Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r## ## Residual standard error: 6.642 on 339 degrees of freedom\r## (2 observations deleted due to missingness)\r## Multiple R-squared: 0.7782,\tAdjusted R-squared: 0.7769 ## F-statistic: 594.8 on 2 and 339 DF, p-value: \u0026lt; 2.2e-16\r Changing the reference category does NOT change our model. It only allows us to make a more meaningful comparison.\nCollapsing variables Continous to categorical In lab 1, I go over how to collapse continuous variables into categorical. Let\u0026rsquo;s categorize body_mass_g into 1, 2, 3, and 4 levels.\nsummary(penguins_new$body_mass_g)\r ## Min. 1st Qu. Median Mean 3rd Qu. Max. NA's ## 2700 3550 4050 4202 4750 6300 2\r cont_cat \u0026lt;- penguins_new %\u0026gt;% mutate(body_mass_factor = cut(body_mass_g,\rbreaks = c(2700, 3550, 4202, 4750, 6300),\rlabels = c(\u0026quot;low\u0026quot;, \u0026quot;medium_low\u0026quot;, \u0026quot;medium_high\u0026quot;, \u0026quot;high\u0026quot;)))\r Categorical to categorical Let\u0026rsquo;s collapse our body_mass_g even further. This code is useful if you have a Likert-type scale with four categories, such as Strong Agree to Strongly Disagree and want to collapse to a category with those who responded Strongly Agree and Agree as 1, and Disagree and Strongly Disagree as 2. We can use fct_collapse to collapse factor levels into groups.\ncat_cat \u0026lt;- cont_cat %\u0026gt;% mutate(body_mass_collpase = fct_collapse(body_mass_factor,\rlow = c(\u0026quot;low\u0026quot;, \u0026quot;medium_low\u0026quot;),\rhigh = c(\u0026quot;medium_high\u0026quot;, \u0026quot;high\u0026quot;)))\r ","date":1622592000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1639539905,"objectID":"8c6f68112abd80f410f6106e2a7f6dda","permalink":"https://dinaarch.netlify.app/post/tips-and-tricks-in-r/","publishdate":"2021-06-02T00:00:00Z","relpermalink":"/post/tips-and-tricks-in-r/","section":"post","summary":"knitr::opts_chunk$set(echo = TRUE,\rwarning = FALSE,\rmessage = FALSE)\rlibrary(stringr) # str_to_lower()\rlibrary(janitor) # clean_names()\rlibrary(palmerpenguins) # penguins\rlibrary(sjmisc) # move_columns\rlibrary(tidyverse)\r Let\u0026rsquo;s use a dataset called penguins in the palmerpenguins package (Reference: Horst AM, Hill AP, \u0026amp; Gorman KB, 2020)","tags":["r markdown","rstudio"],"title":"Tips and Tricks in R","type":"post"},{"authors":[],"categories":"Labs","content":"library(pander) #pander()\rlibrary(psych) # describe()\rlibrary(gtsummary) #tbl_summary()\rlibrary(equatiomatic) # extract_eq()\rlibrary(sjPlot) # tab_xtab(), tab_model()\rlibrary(tidyverse)\r This lab follows along the logistic regression lecture presented in class and provides two examples to demonstrate the models and their interpretation.\nWhat is Binary Logistic Regression?   It is a regression with an outcome variable (or dependent variable) that is dichotomous/binary (i.e., only two categories, such as Yes or No, 0 or 1, Disorder or No Disorder, Win or Lose).\n The predictor variables (or independent variables or explanatory variables) can be either continuous or categorical    In binary logistic regression, we are interested in predicting which of two possible events (e.g., win or lose) are going to happen given the predictor(s) variables\n  Assumes a binomial distribution or ‚Äúa probability distribution that summarizes the likelihood that a value will take one of two independent values under a given set of parameters or assumptions.‚Äù (Source)\n  Binary Logistic Regression in R Admissions Example This example comes from the UCLA Statistical Consulting page found here. This example assesses how GRE, GPA, and prestige of the undergraduate institutions effect graduate school admission.\n   Variable Description     gre Graduate Record Exam (GRE) scores, continuous   gpa Grade point average, continuous   rank Rank of undergraduate institutions, 1 = highest prestige, 4 = lowest, categorical   admit Admission decision, 0 = did not admit, 1 = admitted, binary    References\nHosmer, D. \u0026amp; Lemeshow, S. (2000). Applied Logistic Regression (Second Edition). New York: John Wiley \u0026amp; Sons, Inc.\nLong, J. Scott (1997). Regression Models for Categorical and Limited Dependent Variables. Thousand Oaks, CA: Sage Publications.\nRead in data log \u0026lt;- read.csv(\u0026quot;https://stats.idre.ucla.edu/stat/data/binary.csv\u0026quot;) %\u0026gt;% mutate(rank = factor(rank), #we need to convert this variable to a factor\radmit = factor(admit, levels = c(\u0026quot;0\u0026quot;, \u0026quot;1\u0026quot;), labels = c(\u0026quot;Not Admitted\u0026quot;, \u0026quot;Admitted\u0026quot;))) # add labels to outcome\r Summary # psych::describe()\rround(describe(log),2) %\u0026gt;% pander()      vars n mean sd median trimmed mad min     admit* 1 400 1.32 0.47 1 1.27 0 1   gre 2 400 587.7 115.5 580 589.1 118.6 220   gpa 3 400 3.39 0.38 3.4 3.4 0.4 2.26   rank* 4 400 2.48 0.94 2 2.48 1.48 1    Table continues below\n    max range skew kurtosis se     admit* 2 1 0.78 -1.39 0.02   gre 800 580 -0.14 -0.36 5.78   gpa 4 1.74 -0.21 -0.6 0.02   rank* 4 3 0.1 -0.91 0.05    # I like this table more, but you can do either! Especially if you're getting some errors with gtsummary(). # gtsummary::tbl_summary()\rtbl_summary(log,\rstatistic = list(all_continuous() ~ \u0026quot;{mean} ({sd})\u0026quot;),\rmissing = \u0026quot;no\u0026quot;)\r html {\rfont-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\r}\r#rnvuxdypxd .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; }\n#rnvuxdypxd .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n#rnvuxdypxd .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }\n#rnvuxdypxd .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; }\n#rnvuxdypxd .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }\n#rnvuxdypxd .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n#rnvuxdypxd .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }\n#rnvuxdypxd .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }\n#rnvuxdypxd .gt_column_spanner_outer:first-child { padding-left: 0; }\n#rnvuxdypxd .gt_column_spanner_outer:last-child { padding-right: 0; }\n#rnvuxdypxd .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; }\n#rnvuxdypxd .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; }\n#rnvuxdypxd .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; }\n#rnvuxdypxd .gt_from_md \u0026gt; :first-child { margin-top: 0; }\n#rnvuxdypxd .gt_from_md \u0026gt; :last-child { margin-bottom: 0; }\n#rnvuxdypxd .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; }\n#rnvuxdypxd .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; }\n#rnvuxdypxd .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; }\n#rnvuxdypxd .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; }\n#rnvuxdypxd .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; }\n#rnvuxdypxd .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; }\n#rnvuxdypxd .gt_striped { background-color: rgba(128, 128, 128, 0.05); }\n#rnvuxdypxd .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }\n#rnvuxdypxd .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }\n#rnvuxdypxd .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; }\n#rnvuxdypxd .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }\n#rnvuxdypxd .gt_sourcenote { font-size: 90%; padding: 4px; }\n#rnvuxdypxd .gt_left { text-align: left; }\n#rnvuxdypxd .gt_center { text-align: center; }\n#rnvuxdypxd .gt_right { text-align: right; font-variant-numeric: tabular-nums; }\n#rnvuxdypxd .gt_font_normal { font-weight: normal; }\n#rnvuxdypxd .gt_font_bold { font-weight: bold; }\n#rnvuxdypxd .gt_font_italic { font-style: italic; }\n#rnvuxdypxd .gt_super { font-size: 65%; }\n#rnvuxdypxd .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } \n\rCharacteristic\rN = 4001\r\r\radmit\r\rNot Admitted\r273 (68%)\rAdmitted\r127 (32%)\rgre\r588 (116)\rgpa\r3.39 (0.38)\rrank\r\r1\r61 (15%)\r2\r151 (38%)\r3\r121 (30%)\r4\r67 (17%)\r\r\r1\r\r n (%); Mean (SD)\r\u0026lt;br /\u0026gt;\r\u0026lt;/p\u0026gt;\r\u0026lt;/td\u0026gt;\r\u0026lt;/tr\u0026gt;\r \r\r\rContingency Table Contingency tables, sometimes called cross tabulations or cross tabs, that displays the frequency distribution of your categorical variables. In R, we use sjPlot::tab_xtabs() (Found by Karen!). We want to check the contingency table to make sure there are values in each cell. Since we only have one categorical variable, rank, we only need to check one contingency table.\nsjPlot::tab_xtab(var.row = log$rank, var.col = log$admit, title = \u0026quot;Cross tab of Admit rate by Rank of Undergraduate Insitute\u0026quot;, show.row.prc = TRUE, show.summary=F)\r Cross tab of Admit rate by Rank of Undergraduate Insitute\r\r\rrank\r\radmit\r\rTotal\r\r\r\rNot Admitted\r\rAdmitted\r\r\r\r1\r\r28\n45.9¬†%\r\r33\n54.1¬†%\r\r61\n100¬†%\r\r\r\r2\r\r97\n64.2¬†%\r\r54\n35.8¬†%\r\r151\n100¬†%\r\r\r\r3\r\r93\n76.9¬†%\r\r28\n23.1¬†%\r\r121\n100¬†%\r\r\r\r4\r\r55\n82.1¬†%\r\r12\n17.9¬†%\r\r67\n100¬†%\r\r\r\rTotal\r\r273\n68.2¬†%\r\r127\n31.8¬†%\r\r400\n100¬†%\r\r\r\rThis table shows the row and column totals, as well as row percentages. You can also ask for column percentages, if you prefer.\nBinary Logistic Model Recall in linear regression, we used the lm() function. With logistic regression, we use glm(), or general linear model. The set up is similar to linear regression, however. One important note is to make sure we identify the type of ‚Äúfamily function,‚Äù or the description of the error distribution used in the model. For logistic regression, it‚Äôs family = \u0026quot;binomial\u0026quot;.\nIn our example, the predictors are GRE scores, GPA, and university rank related to graduate school admission status.\nmylogit \u0026lt;- glm(admit ~ gre + gpa + rank, data = log, family = \u0026quot;binomial\u0026quot;)\rsummary(mylogit)\r ## ## Call:\r## glm(formula = admit ~ gre + gpa + rank, family = \u0026quot;binomial\u0026quot;, ## data = log)\r## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.6268 -0.8662 -0.6388 1.1490 2.0790 ## ## Coefficients:\r## Estimate Std. Error z value Pr(\u0026gt;|z|) ## (Intercept) -3.989979 1.139951 -3.500 0.000465 ***\r## gre 0.002264 0.001094 2.070 0.038465 * ## gpa 0.804038 0.331819 2.423 0.015388 * ## rank2 -0.675443 0.316490 -2.134 0.032829 * ## rank3 -1.340204 0.345306 -3.881 0.000104 ***\r## rank4 -1.551464 0.417832 -3.713 0.000205 ***\r## ---\r## Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r## ## (Dispersion parameter for binomial family taken to be 1)\r## ## Null deviance: 499.98 on 399 degrees of freedom\r## Residual deviance: 458.52 on 394 degrees of freedom\r## AIC: 470.52\r## ## Number of Fisher Scoring iterations: 4\r Let‚Äôs dissect this output. It looks similar to regular simple linear regression but interpretation is different (as we saw in lecture). When looking at the coefficients, we see gre, gpa, and the levels of rank are significant predictors of admission status.\nWith binary logistic regression, regression coefficient is the change in the log odds of the outcome for a one unit increase in the predictor variable, holding others constant. The intercept is the log odds for students who has zero on all the predictors, a value not observed in this sample (e.g., no one has GPA or GRE score of zero).\nSo this is how we would interpret those same variables when running a logistic regression model (Note: it‚Äôs a z-statistic now since these are standardized coefficients):\n GRE was significantly related to admission decision (z = 2.070, p = 0.038). Specifically, the results indicate that for every one-unit increase in GRE score, there is an increase of B = 0.002 in the the log odds of being admitted to graduate school, controlling for GPA and university rank.  Additionally, this is how we would interpret the categorical variable rank. Note that because this is a categorical variable, we are comparing the categories to a comparison group (or a reference group). In this example, the comparison group is rank 1:\n Students who attended rank 2 universities are less likely to be admitted to graduate school, compared to rank 1 universities (z = -0.675, p = 0.033).  The log odds, or logits, are not always easily interpreted and can be converted to odds ratios for easier interpretation.\nOdds Ratios The coefficients presented above are log odds. To convert them to odd ratios, we take the exponent of the coefficients (Slide 21 in lecture):\n$$ odds ratio = e^{\\beta} $$\n#coverting the log odds (logits) to odds ratios\rexp(coef(mylogit))\r ## (Intercept) gre gpa rank2 rank3 rank4 ## 0.0185001 1.0022670 2.2345448 0.5089310 0.2617923 0.2119375\r ## odds ratios and 95% CI\rexp(cbind(OR = coef(mylogit), confint(mylogit)))\r ## OR 2.5 % 97.5 %\r## (Intercept) 0.0185001 0.001889165 0.1665354\r## gre 1.0022670 1.000137602 1.0044457\r## gpa 2.2345448 1.173858216 4.3238349\r## rank2 0.5089310 0.272289674 0.9448343\r## rank3 0.2617923 0.131641717 0.5115181\r## rank4 0.2119375 0.090715546 0.4706961\r These values likely make a little more sense. Considering GRE in the example again:\n GRE was significantly related to admission decision (z = 2.070, p = 0.038). Specifically, for every one-unit increase in GRE score, the odds of being admitted to graduate school increase by a factor of 1.002, controlling for GPA and university rank. (Note this is a very small amount because one point increase in GRE doesn‚Äôt represent a large difference).  Said differently,\n GRE was significantly related to admission decision (z = 2.070, p = 0.038). Specifically, for every one-unit increase in GRE score, we expect to see about a .002% increase in the odds of being admitted to graduate school, controlling for GPA and university rank.  Predicted Probability To make the coefficients easier to interpret, we can take the odds ratio values and convert them to probabilities. To do this, we take the odds ratio and divide it by the odds ratio plus 1 (See slide 25):\n$$ probability = \\frac{odds}{odds + 1} $$\nBefore we dive right into conversions, we could also calculate the predicted probabilities of admission for specific values of the the predictors. Recall in lecture (Slide 23) to find the log odds of an x-value, we want to plug it into our regression equation:\nextract_eq(mylogit, use_coefs = TRUE)\r $$ \\log\\left[ \\frac { \\widehat{P( \\operatorname{admit} = \\operatorname{Admitted} )} }{ 1 - \\widehat{P( \\operatorname{admit} = \\operatorname{Admitted} )} } \\right] = -3.99 + 0(\\operatorname{gre}) + 0.8(\\operatorname{gpa}) - 0.68(\\operatorname{rank}{\\operatorname{2}}) - 1.34(\\operatorname{rank}{\\operatorname{3}}) - 1.55(\\operatorname{rank}_{\\operatorname{4}}) $$\nTo create predicted probabilities, we need to create a new data frame with the x-value we want the independent variables to take on to create our predictions (In lecture, slide 23, the value was SurvRate = 40). For this example, let‚Äôs use the mean. And since we have a categorical predictor, rank, lets look at the mean of gre and gpa and each value of university rank. We could, of course, do all the calculations by hand. But R is easier :)\nLet‚Äôs first create the data frame using with:\npred_prob \u0026lt;- with(log, data.frame(gre = mean(gre), gpa = mean(gpa), rank = factor(1:4)))\rpred_prob\r ## gre gpa rank\r## 1 587.7 3.3899 1\r## 2 587.7 3.3899 2\r## 3 587.7 3.3899 3\r## 4 587.7 3.3899 4\r So we have our mean of gpa and gre and each level of rank. Which means we are going to get four predicted probabilities, at the mean of the other two variables. If we did not have a categorical predictor, we would only have one.\nNow let‚Äôs create the predicted probabilities using the mean of gre and gpa and each level of rank using the predict() function. What R is doing here is taking the logits from mylogit and converting them to predicted probabilities based on the values we provided in pred_prob. We identify the object as pred_prob$rankP to create a new column of the within the pred_prob dataset called rankP.\npred_prob$rankP \u0026lt;- predict(mylogit, newdata = pred_prob, type = \u0026quot;response\u0026quot;)\rpred_prob\r ## gre gpa rank rankP\r## 1 587.7 3.3899 1 0.5166016\r## 2 587.7 3.3899 2 0.3522846\r## 3 587.7 3.3899 3 0.2186120\r## 4 587.7 3.3899 4 0.1846684\r Great! Now we have predicted probabilities. Here is our interpretation:\n For those with an average GPA and GRE score (holding GPA and GRE constant), the predicted probabilities of being accepted into a graduate program is .516 for those in the highest ranked undergraduate institutions (rank = 1) and .184 for students from the lowest ranked undergraduate institutions (rank=4). This demonstrates the relation of rank of the university in the probability of being admitted to graduate school.  Classification Table A classification table is similar to a contingency table, but in this table we compare the actual values to the predicted values based on the binary logistic regression model. This is a way to see how well the model did at predicting the outcome of being admitted to graduate school.\nIn this code, we take actual fitted values from the model (mylogit$fitted.values), and separate them by a cut off of p = .5. Those who had a fitted value of above .50 were assigned ‚ÄúAdmitted.‚Äù We are comparing the values given by the model (fitted values) and whether or not they actually got admitted. The purpose of this is to see how effective our model is at predicting admission status\n# Converting from probability to actual output\rlog$fitted_admit \u0026lt;- ifelse(mylogit$fitted.values \u0026gt;= 0.5, \u0026quot;1\u0026quot;, \u0026quot;0\u0026quot;) #1 = Admitted, 0 = Not Admitted\r# Generating the classification table\rctab \u0026lt;- table(log$admit, log$fitted_admit)\rctab\r ## ## 0 1\r## Not Admitted 254 19\r## Admitted 97 30\r #I (Karen) like this table better because it include row and column totals\rsjPlot::tab_xtab(var.row = log$admit, var.col = log$fitted_admit, title = \u0026quot;Observed Admission versus Predited Admission counts\u0026quot;, show.row.prc = TRUE, show.summary = F )\r Observed Admission versus Predited Admission counts\r\r\radmit\r\rfitted_admit\r\rTotal\r\r\r\r0\r\r1\r\r\r\rNot Admitted\r\r254\n93¬†%\r\r19\n7¬†%\r\r273\n100¬†%\r\r\r\rAdmitted\r\r97\n76.4¬†%\r\r30\n23.6¬†%\r\r127\n100¬†%\r\r\r\rTotal\r\r351\n87.8¬†%\r\r49\n12.2¬†%\r\r400\n100¬†%\r\r\r\rHere, we can see that the model correctly predicted 30 of 127, or 23.6%, of the students that actually got admitted. Thus, it misclassified 76.4% (97) of the admitted students were predicted to be ‚Äúnot admitted.‚Äù Additionally, we see that it correctly classified 254 of 273 (93%) of the not admitted students. Thus this model did a better job at predicting who was not admitted than those who were admitted.\nAccuracy We can check the accuracy percentage:\naccuracy \u0026lt;- sum(diag(ctab))/sum(ctab)*100\raccuracy\r ## [1] 71\r Overall, the accuracy of our model is 71%, or our logistic model is able to classify 71% of the observations correctly.\nHierarchical model building with logistic regression Just as we did in linear regression, we can proceed through a model building process with logistic regression. In this context, we are interested in seeing how we can improve the prediction of the outcome in a hierarchical fashion.\nLet‚Äôs say we fit the following models:\n  Predicting admission from just GPA (log1)\n  Predicting admission from GPA and GRE (log2)\n  Predicting admission using GPA, GRE, and rank (log3)\n  We can create a table of all three models using tab_model of the sjPlot package. We can compare the R2 estimates across the models. Using the anovafunction, we can also test if there is a statistical improvement in fit by adding the predictor(s). In logistic regression models, we test if the residual deviance significant decreases. We are using the ANOVA function, but it‚Äôs not an ANOVA test like you may have done before. In this case, we are using ANOVA to compare the deviance for each model to the subsequent model. If the chi-square value is significant we can interpret that the addition of the extra variables (going from log1 to log 2, for example) significantly improves the model prediction (e.g., lowers the residual variance).\nlog1 \u0026lt;- glm(admit ~ gpa , data = log, family = \u0026quot;binomial\u0026quot;)\rlog2 \u0026lt;- glm(admit ~ gpa + gre , data = log, family = \u0026quot;binomial\u0026quot;)\rlog3 \u0026lt;- glm(admit ~ gpa + gre + rank, data = log, family = \u0026quot;binomial\u0026quot;)\rtab_model(log1, log2, log3)\r \r\radmit\r\radmit\r\radmit\r\r\r\rPredictors\r\rOdds Ratios\r\rCI\r\rp\r\rOdds Ratios\r\rCI\r\rp\r\rOdds Ratios\r\rCI\r\rp\r\r\r\r(Intercept)\r\r0.01\r\r0.00¬†‚Äì¬†0.09\r\r\\\r\r0.01\r\r0.00¬†‚Äì¬†0.06\r\r\\\r\r0.02\r\r0.00¬†‚Äì¬†0.17\r\r\\\r\r\r\rgpa\r\r2.86\r\r1.61¬†‚Äì¬†5.20\r\r\\\r\r2.13\r\r1.14¬†‚Äì¬†4.02\r\r0.018\r\r2.23\r\r1.17¬†‚Äì¬†4.32\r\r0.015\r\r\r\rgre\r\r\r\r\r1.00\r\r1.00¬†‚Äì¬†1.00\r\r0.011\r\r1.00\r\r1.00¬†‚Äì¬†1.00\r\r0.038\r\r\r\rrank \\[2\\]\r\r\r\r\r\r\r\r0.51\r\r0.27¬†‚Äì¬†0.94\r\r0.033\r\r\r\rrank \\[3\\]\r\r\r\r\r\r\r\r0.26\r\r0.13¬†‚Äì¬†0.51\r\r\\\r\r\r\rrank \\[4\\]\r\r\r\r\r\r\r\r0.21\r\r0.09¬†‚Äì¬†0.47\r\r\\\r\r\r\rObservations\r\r400\r\r400\r\r400\r\r\r\rR2 Tjur\r\r0.032\r\r0.047\r\r0.102\r\r\r\ranova(log1, log2, log3, test=\u0026quot;Chisq\u0026quot;)\r ## Analysis of Deviance Table\r## ## Model 1: admit ~ gpa\r## Model 2: admit ~ gpa + gre\r## Model 3: admit ~ gpa + gre + rank\r## Resid. Df Resid. Dev Df Deviance Pr(\u0026gt;Chi) ## 1 398 486.97 ## 2 397 480.34 1 6.6236 0.01006 * ## 3 394 458.52 3 21.8265 7.088e-05 ***\r## ---\r## Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r Based on the ANOVA results, we see that the addition of each additional predictor signficnalty improves the prediction of graduate school admission. Note, you don‚Äôt have to do this, but if you have research questions about the specific predictive power, controloing for the others, you can use this apporach.\nThe API Example Data from UCLA - Academic Performance Index. Note: This is the same example as the simple linear regression lab (Lab 5). However, we are changing the model to have a binary outcome for logistic regression. Below is the list of variables we used in this analysis for lab, noting that there are more variables in the API dataset.\n         Variable Description   api00 Academic Performance Index, 0 = under statewide target of 800, 1 = above 800, binary   enroll School enrollment, continuous   Meals Number of free and reduced lunch, continuous   full Percentage of teachers will full credentials, continuous    Read in data Here, we are reading in the data directly from the UCLA website. Additionally, we are dichotomizing the API (api00) variable to separate schools above statewide target of 800 and below. This cut-off may be outdated and/or controversial, however, we are going to use this for the purpose of providing an example of how to do logistic regression in R.\napi \u0026lt;- read.csv(\r\u0026quot;https://stats.idre.ucla.edu/wp-content/uploads/2019/02/elemapi2v2.csv\u0026quot;) %\u0026gt;% select(api00, full, enroll, meals) %\u0026gt;%\rmutate(api_factor = cut(api00,\rlevels = c(\u0026quot;0\u0026quot;, \u0026quot;1\u0026quot;),\rbreaks = c(0, 800, 940),\rlabels = c(\u0026quot;Below Target\u0026quot;, \u0026quot;At or Above Target\u0026quot;))) # here we are dichotomizing API, see lab 1 for a refresher on what this all does.\r Summary For a short descriptor of each variable, scroll down here.\n# psych::describe()\rround(describe(api),2) %\u0026gt;% pander()      vars n mean sd median trimmed mad min     api00 1 400 647.6 142.2 643 645.8 177.2 369   full 2 400 84.55 14.95 88 86.6 14.83 37   enroll 3 400 483.5 226.4 435 459.4 202.4 130   meals 4 400 60.31 31.91 67.5 62.18 37.81 0   api_factor* 5 400 1.19 0.39 1 1.12 0 1    Table continues below\n    max range skew kurtosis se     api00 940 571 0.1 -1.13 7.11   full 100 63 -0.97 0.17 0.75   enroll 1570 1440 1.34 3.02 11.32   meals 100 100 -0.41 -1.2 1.6   api_factor* 2 1 1.55 0.42 0.02    # I like this table more, but you can do either! Especially if you're getting some errors with gtsummary(). Useful when you have a subset, but here we left all variables in the sample so it's a long table. # gtsummary::gtsummary()\r#tbl_summary(api,\r# statistic = list(all_continuous() ~ \u0026quot;{mean} ({sd})\u0026quot;),\r# missing = \u0026quot;no\u0026quot;)\r There is no contingency table in this example because all of our predictors are continuous.\nBinary Logistic Model We are using a binary logistic regression model to see how school characteristics relate to a school making adequate progress (api=1) or not (api=0).\nBinary outcome: API adequate progress =1, not adequate progress=0 Predictors: % fully credential teachers, student enrollment, and % on free and reduced lunch\nmylogit \u0026lt;- glm(api_factor ~ full + enroll + meals, data = api, family = \u0026quot;binomial\u0026quot;)\rsummary(mylogit)\r ## ## Call:\r## glm(formula = api_factor ~ full + enroll + meals, family = \u0026quot;binomial\u0026quot;, ## data = api)\r## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.86557 -0.16221 -0.03269 -0.01028 3.12996 ## ## Coefficients:\r## Estimate Std. Error z value Pr(\u0026gt;|z|) ## (Intercept) -3.0746093 2.7320279 -1.125 0.2604 ## full 0.0582641 0.0282187 2.065 0.0389 * ## enroll 0.0004592 0.0013843 0.332 0.7401 ## meals -0.1096184 0.0144185 -7.603 2.9e-14 ***\r## ---\r## Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r## ## (Dispersion parameter for binomial family taken to be 1)\r## ## Null deviance: 391.86 on 399 degrees of freedom\r## Residual deviance: 147.45 on 396 degrees of freedom\r## AIC: 155.45\r## ## Number of Fisher Scoring iterations: 8\r Odds Ratios exp(coef(mylogit))\r ## (Intercept) full enroll meals ## 0.04620768 1.05999495 1.00045932 0.89617604\r ## odds ratios and 95% CI\rexp(cbind(OR = coef(mylogit), confint(mylogit)))\r ## OR 2.5 % 97.5 %\r## (Intercept) 0.04620768 0.0001656294 7.8435280\r## full 1.05999495 1.0055761469 1.1237801\r## enroll 1.00045932 0.9978836793 1.0032716\r## meals 0.89617604 0.8684201733 0.9192615\r Predicted Probability #creating the means of each variable\rpred_prob_api\u0026lt;- with(api, data.frame(full = mean(full), enroll = mean(enroll), meals = mean(meals)))\rpred_prob_api\r ## full enroll meals\r## 1 84.55 483.465 60.315\r pred_prob_api$apiP\u0026lt;- predict(mylogit, newdata = pred_prob_api, type = \u0026quot;response\u0026quot;)\rpred_prob_api\r ## full enroll meals apiP\r## 1 84.55 483.465 60.315 0.01058167\r This result says that for schools that have average on all the predictors, the probablity of being at target is .01. yikes!\nClassification Table # Converting from probability to actual output\rapi$fitted_api \u0026lt;- ifelse(mylogit$fitted.values \u0026gt;= 0.5, \u0026quot;1\u0026quot;, \u0026quot;0\u0026quot;) #1 = Above Average, 0 = Below\r# Generating the classification table\rctab \u0026lt;- table(api$api_factor, api$fitted_api)\rctab\r ## ## 0 1\r## Below Target 304 19\r## At or Above Target 15 62\r #I (Karen) like this table better because it include row and column totals\rsjPlot::tab_xtab(var.row = api$api_factor, var.col = api$fitted_api, title = \u0026quot;Observed Progress versus Predited progress counts\u0026quot;, show.row.prc = TRUE, show.summary = F )\r Observed Progress versus Predited progress counts\r\r\rapi_factor\r\rfitted_api\r\rTotal\r\r\r\r0\r\r1\r\r\r\rBelow Target\r\r304\n94.1¬†%\r\r19\n5.9¬†%\r\r323\n100¬†%\r\r\r\rAt or Above Target\r\r15\n19.5¬†%\r\r62\n80.5¬†%\r\r77\n100¬†%\r\r\r\rTotal\r\r319\n79.8¬†%\r\r81\n20.2¬†%\r\r400\n100¬†%\r\r\r\rAccuracy accuracy \u0026lt;- sum(diag(ctab))/sum(ctab)*100\raccuracy\r ## [1] 91.5\r Sample write up Using a binary logistic regression, we explored how school‚Äôs characteristics (% fully credential teachers, studnet enrollment, and % on free and reduced lunch) relate to the adequate progress of a school. Both the percent of credentialed teachers (z = 2.06, p = .04) and the % free and reduced lunch (z = -.11, p \u0026lt; .01) were significant predictors. Specifically the percent of fully credentialed teachers has an OR = 1.05, 95%CI[1.01, 1.12]. This implies that for a one percent increase in the fully credentialed teachers, schools have a 5% higher chance of making target. Free and reduced lunch had estimated OR =.90, 95% CI [.86, .92], which indicated that for each additional percent of students on free and reduced lunch, there is a significant decrease in the log odds of being at target (z = -7.60, p \u0026lt; .01). That is, for each additional percent increase of free or reduced lunch, that school has a 11% decrease in the odds of making it to target growth, controlling for the other predictors. There was no effect of the enrollment of the school, when controlling for the other variables. Overall, this model had high prediction accuracy, predicting 91% schools accurately.\nHope this is useful‚Ä¶.\n","date":1622332800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1639539558,"objectID":"6782ced01b49117532c081814e97ee15","permalink":"https://dinaarch.netlify.app/post/binary-logistic-regression-lab/","publishdate":"2021-05-30T00:00:00Z","relpermalink":"/post/binary-logistic-regression-lab/","section":"post","summary":"library(pander) #pander()\rlibrary(psych) # describe()\rlibrary(gtsummary) #tbl_summary()\rlibrary(equatiomatic) # extract_eq()\rlibrary(sjPlot) # tab_xtab(), tab_model()\rlibrary(tidyverse)\r This lab follows along the logistic regression lecture presented in class and provides two examples to demonstrate the models and their interpretation.","tags":["r markdown","binary regression","labs","odds ratios","classification"],"title":"Binary Logistic Regression Lab","type":"post"},{"authors":[],"categories":"R Project","content":"Background The U.S. presidential election in 2012 did not come as a surprise. Some correctly predicted the outcome of the election correctly including Nate Silver, and many speculated about his approach.\nDespite the success in 2012, the 2016 presidential election came as a big surprise to many, and it underscored that predicting voter behavior is complicated for many reasons despite the tremendous effort in collecting, analyzing, and understanding many available datasets.\nYour final project will be to merge census data with 2016 voting data to analyze the election outcome.\nTo familiarize yourself with the general problem of predicting election outcomes, read the articles linked above and answer the following questions. Limit your responses to one paragraph for each.\n What makes voter behavior prediction (and thus election forecasting) a hard problem?  **In general, predicting behavior has its limitations. As mentioned in the fivethirtyeight.com article, there is always going to be statistical noise and nonresponse bias to pre-election polls which is then not representative of voter turnout. For the 2016 election specifically, there may have been people who had a preference for a certain candidate during pre-election polls and perhaps changed their mind at the voting booth. **\nWhat was unique to Nate Silver\u0026rsquo;s approach in 2012 that allowed him to achieve good predictions?  The Guardian mentions modeling voting behavior and polls, the mathematical model being: Proportion of people saying they will vote for Obama is that actual percentage + the house effect + sampling variation. Based on Wikipedia\u0026rsquo;s discussion, he published an interactive webpage that allowed readers to predictor the outcome of the election based on three variables: President Obama\u0026rsquo;s favorability ratings, the rate of GDP growth, and how conservative the Republication opponent would be. It\u0026rsquo;s doesn\u0026rsquo;t mention if he used the responses in his model, however.\nWhat went wrong in 2016? What do you think should be done to make future predictions better?  As mentioned before there was high error, such as statistical noise and nonresponse bias. There could be many reasons for this, one example the article mentioned was that pollsters could have been embarrassed to admit who they were supporting. They also could have had a changed their mind about a candidate between the pre-election polls and when voting.\nData The project_data.RData binary file contains three datasets: tract-level 2010 census data, stored as census; metadata census_meta with variable descriptions and types; and county-level vote tallies from the 2016 election, stored as election_raw.\nElection data Some example rows of the election data are shown below:\n## # A tibble: 6 x 5\r## county fips candidate state votes\r## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 Los Angeles County 6037 Hillary Clinton CA 2464364\r## 2 Los Angeles County 6037 Donald Trump CA 769743\r## 3 Los Angeles County 6037 Gary Johnson CA 88968\r## 4 Los Angeles County 6037 Jill Stein CA 76465\r## 5 Los Angeles County 6037 Gloria La Riva CA 21993\r## 6 Cook County 17031 Hillary Clinton IL 1611946\r The meaning of each column in election_raw is self-evident except fips. The accronym is short for Federal Information Processing Standard. In this dataset, fips values denote the area (nationwide, statewide, or countywide) that each row of data represent.\nNationwide and statewide tallies are included as rows in election_raw with county values of NA. There are two kinds of these summary rows:\n Federal-level summary rows have a fips value of US. State-level summary rows have the state name as the fips value.  Inspect rows with fips=2000. Provide a reason for excluding them. Drop these observations \u0026ndash; please write over election_raw \u0026ndash; and report the data dimensions after removal.  ## # A tibble: 6 x 5\r## county fips candidate state votes\r## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 \u0026lt;NA\u0026gt; 2000 Donald Trump AK 163387\r## 2 \u0026lt;NA\u0026gt; 2000 Hillary Clinton AK 116454\r## 3 \u0026lt;NA\u0026gt; 2000 Gary Johnson AK 18725\r## 4 \u0026lt;NA\u0026gt; 2000 Jill Stein AK 5735\r## 5 \u0026lt;NA\u0026gt; 2000 Darrell Castle AK 3866\r## 6 \u0026lt;NA\u0026gt; 2000 Rocky De La Fuente AK 1240\r The only reason I see for exclusion is lack of county information and the fips value is identified as neither federal level (fips value of US) or state-level (fips value as the state).\nDimensions:\n## [1] 18345 5\r Census data The first few rows and columns of the census data are shown below.\n## # A tibble: 6 x 6\r## CensusTract State County TotalPop Men Women\r## \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 1001020100 Alabama Autauga 1948 940 1008\r## 2 1001020200 Alabama Autauga 2156 1059 1097\r## 3 1001020300 Alabama Autauga 2968 1364 1604\r## 4 1001020400 Alabama Autauga 4423 2172 2251\r## 5 1001020500 Alabama Autauga 10763 4922 5841\r## 6 1001020600 Alabama Autauga 3851 1787 2064\r Variable descriptions are given in the metadata file. The variables shown above are:\n## # A tibble: 6 x 3\r## variable description type ## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; ## 1 \u0026quot;CensusTract \u0026quot; \u0026quot; Census tract ID \u0026quot; \u0026quot; numeric \u0026quot;\r## 2 \u0026quot;State \u0026quot; \u0026quot; State, DC, or Puerto Rico \u0026quot; \u0026quot; string \u0026quot; ## 3 \u0026quot;County \u0026quot; \u0026quot; County or county equivalent \u0026quot; \u0026quot; string \u0026quot; ## 4 \u0026quot;TotalPop \u0026quot; \u0026quot; Total population \u0026quot; \u0026quot; numeric \u0026quot;\r## 5 \u0026quot;Men \u0026quot; \u0026quot; Number of men \u0026quot; \u0026quot; numeric \u0026quot;\r## 6 \u0026quot;Women \u0026quot; \u0026quot; Number of women \u0026quot; \u0026quot; numeric \u0026quot;\r \\newpage\nData preprocessing  Separate the rows of election_raw into separate federal-, state-, and county-level data frames:\n  Store federal-level tallies as election_federal.\n  Store state-level tallies as election_state.\n  Store county-level tallies as election. Coerce the fips variable to numeric.\n    Federal-Level Tallies (First 5 Rows):\n## # A tibble: 6 x 5\r## county fips candidate state votes\r## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 \u0026lt;NA\u0026gt; US Donald Trump US 62984825\r## 2 \u0026lt;NA\u0026gt; US Hillary Clinton US 65853516\r## 3 \u0026lt;NA\u0026gt; US Gary Johnson US 4489221\r## 4 \u0026lt;NA\u0026gt; US Jill Stein US 1429596\r## 5 \u0026lt;NA\u0026gt; US Evan McMullin US 510002\r## 6 \u0026lt;NA\u0026gt; US Darrell Castle US 186545\r State-Level Tallies (First 5 Rows):\n## # A tibble: 6 x 5\r## county fips candidate state votes\r## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 \u0026lt;NA\u0026gt; CA Hillary Clinton CA 8753788\r## 2 \u0026lt;NA\u0026gt; CA Donald Trump CA 4483810\r## 3 \u0026lt;NA\u0026gt; CA Gary Johnson CA 478500\r## 4 \u0026lt;NA\u0026gt; CA Jill Stein CA 278657\r## 5 \u0026lt;NA\u0026gt; CA Gloria La Riva CA 66101\r## 6 \u0026lt;NA\u0026gt; FL Donald Trump FL 4617886\r County-Level Tallies (First 5 Rows):\n## # A tibble: 6 x 5\r## county fips candidate state votes\r## \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 Los Angeles County 6037 Hillary Clinton CA 2464364\r## 2 Los Angeles County 6037 Donald Trump CA 769743\r## 3 Los Angeles County 6037 Gary Johnson CA 88968\r## 4 Los Angeles County 6037 Jill Stein CA 76465\r## 5 Los Angeles County 6037 Gloria La Riva CA 21993\r## 6 Cook County 17031 Hillary Clinton IL 1611946\r How many named presidential candidates were there in the 2016 election? Draw a bar graph of all votes received by each candidate, and order the candidate names by decreasing vote counts. (You may need to log-transform the vote axis.)  **There are 31 named presidential candidates**\rCreate county_winner and state_winner by taking the candidate with the highest proportion of votes. (Hint: to create county_winner, start with election, group by fips, compute total votes, and pct = votes/total. Then choose the highest row using slice_max (variable state_winner is similar).)  County Winner (First 5 Counties):\n## # A tibble: 6 x 7\r## # Groups: fips [6]\r## county fips candidate state votes total pct\r## \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 Autauga County 1001 Donald Trump AL 18172 24759 0.734\r## 2 Baldwin County 1003 Donald Trump AL 72883 94261 0.773\r## 3 Barbour County 1005 Donald Trump AL 5454 10436 0.523\r## 4 Bibb County 1007 Donald Trump AL 6738 8753 0.770\r## 5 Blount County 1009 Donald Trump AL 22859 25442 0.898\r## 6 Bullock County 1011 Hillary Clinton AL 3530 4702 0.751\r State Winner (First 5 State):\n## # A tibble: 6 x 7\r## # Groups: fips [6]\r## county fips candidate state votes total pct\r## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 \u0026lt;NA\u0026gt; 46102 Hillary Clinton SD 2510 2905 0.864\r## 2 \u0026lt;NA\u0026gt; AK Donald Trump AK 163387 309407 0.528\r## 3 \u0026lt;NA\u0026gt; AL Donald Trump AL 1318255 2101660 0.627\r## 4 \u0026lt;NA\u0026gt; AR Donald Trump AR 684872 1130635 0.606\r## 5 \u0026lt;NA\u0026gt; AZ Donald Trump AZ 1252401 2554240 0.490\r## 6 \u0026lt;NA\u0026gt; CA Hillary Clinton CA 8753788 14060856 0.623\r Visualization Here you\u0026rsquo;ll generate maps of the election data using ggmap. The .Rmd file for this document contains codes to generate the following map.\nDraw a county-level map with map_data(\u0026quot;county\u0026quot;) and color by county.  In order to map the winning candidate for each state, the map data (states) must be merged with with the election data (state_winner).\nThe function left_join() will do the trick, but needs to join the data frames on a variable with values that match. In this case, that variable is the state name, but abbreviations are used in one data frame and the full name is used in the other.\nUse the following function to create a fips variable in the states data frame with values that match the fips variable in election_federal.  First 5 rows in the states data frame:\n## long lat group order region subregion fips\r## 1 -87.46201 30.38968 1 1 alabama \u0026lt;NA\u0026gt; AL\r## 2 -87.48493 30.37249 1 2 alabama \u0026lt;NA\u0026gt; AL\r## 3 -87.52503 30.37249 1 3 alabama \u0026lt;NA\u0026gt; AL\r## 4 -87.53076 30.33239 1 4 alabama \u0026lt;NA\u0026gt; AL\r## 5 -87.57087 30.32665 1 5 alabama \u0026lt;NA\u0026gt; AL\r## 6 -87.58806 30.32665 1 6 alabama \u0026lt;NA\u0026gt; AL\r  Now the data frames can be merged. left_join(df1, df2) takes all the rows from df1 and looks for matches in df2. For each match, left_join() appends the data from the second table to the matching row in the first; if no matching value is found, it adds missing values.  Use left_join to merge the tables and use the result to create a map of the election results by state. Your figure will look similar to this state level New York Times map. (Hint: use scale_fill_brewer(palette=\u0026quot;Set1\u0026quot;) for a red-and-blue map.)  Merged states by fips (First 5 rows): Now create a county-level map. The county-level map data does not have a fips value, so to create one, use information from maps::county.fips: split the polyname column to region and subregion using tidyr::separate, and use left_join() to combine county.fips with the county-level map data. Then construct the map. Your figure will look similar to county-level New York Times map.  Create a visualization of your choice using census data. Many exit polls noted that demographics played a big role in the election. If you need a starting point, use this Washington Post article and this R graph gallery for ideas and inspiration.  The census data contains high resolution information (more fine-grained than county-level). Aggregate the information into county-level data by computing population-weighted averages of each attribute for each county by carrying out the following steps:    Clean census data, saving the result as census_del:\n filter out any rows of census with missing values; convert Men, Employed, and Citizen to percentages; compute a Minority variable by combining Hispanic, Black, Native, Asian, Pacific, and remove these variables after creating Minority; and remove Walk, PublicWork, and Construction.    Create population weights for sub-county census data, saving the result as census_subct:\n group census_del by State and County; use add_tally() to compute CountyPop; compute the population weight as TotalPop/CountyTotal; adjust all quantitative variables by multiplying by the population weights.    Aggregate census data to county level, census_ct: group the sub-county data census_subct by state and county and compute popluation-weighted averages of each variable by taking the sum (since the variables were already transformed by the population weights)\n  Print the first few rows and columns of census_ct.\n  ## # A tibble: 6 x 28\r## # Groups: State [1]\r## State County Men Women White Citizen Income IncomeErr IncomePerCap\r## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 Alabama Autauga 48.4 3349. 75.8 73.7 51696. 7771. 24974.\r## 2 Alabama Baldwin 48.8 3934. 83.1 75.7 51074. 8745. 27317.\r## 3 Alabama Barbour 53.8 1492. 46.2 76.9 32959. 6031. 16824.\r## 4 Alabama Bibb 53.4 2930. 74.5 77.4 38887. 5662. 18431.\r## 5 Alabama Blount 49.4 3562. 87.9 73.4 46238. 8696. 20532.\r## 6 Alabama Bullock 53.0 1968. 22.2 75.5 33293. 9000. 17580.\r## # ... with 19 more variables: IncomePerCapErr \u0026lt;dbl\u0026gt;, Poverty \u0026lt;dbl\u0026gt;,\r## # ChildPoverty \u0026lt;dbl\u0026gt;, Professional \u0026lt;dbl\u0026gt;, Service \u0026lt;dbl\u0026gt;, Office \u0026lt;dbl\u0026gt;,\r## # Production \u0026lt;dbl\u0026gt;, Drive \u0026lt;dbl\u0026gt;, Carpool \u0026lt;dbl\u0026gt;, Transit \u0026lt;dbl\u0026gt;,\r## # OtherTransp \u0026lt;dbl\u0026gt;, WorkAtHome \u0026lt;dbl\u0026gt;, MeanCommute \u0026lt;dbl\u0026gt;, Employed \u0026lt;dbl\u0026gt;,\r## # PrivateWork \u0026lt;dbl\u0026gt;, SelfEmployed \u0026lt;dbl\u0026gt;, FamilyWork \u0026lt;dbl\u0026gt;,\r## # Unemployment \u0026lt;dbl\u0026gt;, Minority \u0026lt;dbl\u0026gt;\r If you were physically located in the United States on election day for the 2016 presidential election, what state and county were you in? Compare and contrast the results and demographic information for this county with the state it is located in. If you were not in the United States on election day, select any county. Do you find anything unusual or surprising? If so, explain; if not, explain why not.  On election day, I was in Los Angeles, CA. Taking the average values of some of the variables to look at overall California demographics, it looks like minorities make up 70% of LA, and 40% of California. Men and Unemployement is unchanged. Having lived here a long time, I am not surprised at the demographics. LA is much more diverse than the rest of California.\n## # A tibble: 1 x 28\r## # Groups: State [1]\r## State County Men Women White Citizen Income IncomeErr IncomePerCap\r## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 California Los Angeles 49.2 2460. 26.9 60.1 61385. 10572. 28390.\r## # ... with 19 more variables: IncomePerCapErr \u0026lt;dbl\u0026gt;, Poverty \u0026lt;dbl\u0026gt;,\r## # ChildPoverty \u0026lt;dbl\u0026gt;, Professional \u0026lt;dbl\u0026gt;, Service \u0026lt;dbl\u0026gt;, Office \u0026lt;dbl\u0026gt;,\r## # Production \u0026lt;dbl\u0026gt;, Drive \u0026lt;dbl\u0026gt;, Carpool \u0026lt;dbl\u0026gt;, Transit \u0026lt;dbl\u0026gt;,\r## # OtherTransp \u0026lt;dbl\u0026gt;, WorkAtHome \u0026lt;dbl\u0026gt;, MeanCommute \u0026lt;dbl\u0026gt;, Employed \u0026lt;dbl\u0026gt;,\r## # PrivateWork \u0026lt;dbl\u0026gt;, SelfEmployed \u0026lt;dbl\u0026gt;, FamilyWork \u0026lt;dbl\u0026gt;,\r## # Unemployment \u0026lt;dbl\u0026gt;, Minority \u0026lt;dbl\u0026gt;\r ## # A tibble: 1 x 27\r## State Men Women White Citizen Income IncomeErr IncomePerCap IncomePerCapErr\r## \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 Calif~ 50.4 2665. 55.7 68.2 59031. 9828. 28014. 3977.\r## # ... with 18 more variables: Poverty \u0026lt;dbl\u0026gt;, ChildPoverty \u0026lt;dbl\u0026gt;,\r## # Professional \u0026lt;dbl\u0026gt;, Service \u0026lt;dbl\u0026gt;, Office \u0026lt;dbl\u0026gt;, Production \u0026lt;dbl\u0026gt;,\r## # Drive \u0026lt;dbl\u0026gt;, Carpool \u0026lt;dbl\u0026gt;, Transit \u0026lt;dbl\u0026gt;, OtherTransp \u0026lt;dbl\u0026gt;,\r## # WorkAtHome \u0026lt;dbl\u0026gt;, MeanCommute \u0026lt;dbl\u0026gt;, Employed \u0026lt;dbl\u0026gt;, PrivateWork \u0026lt;dbl\u0026gt;,\r## # SelfEmployed \u0026lt;dbl\u0026gt;, FamilyWork \u0026lt;dbl\u0026gt;, Unemployment \u0026lt;dbl\u0026gt;, Minority \u0026lt;dbl\u0026gt;\r Exploratory analysis Carry out PCA for both county \u0026amp; sub-county level census data. Compute the first two principal components PC1 and PC2 for both county and sub-county respectively. Discuss whether you chose to center and scale the features and the reasons for your choice. Examine and interpret the loadings.  County Level: **The first PC has a high percentage of children under poverty level, a high percentage of people under poverty level, and high percentage of those unemployed. The first PC also has low income per capital, low percentage of those employed (16+), and low median household income. I would label this principal component as Under Poverty Level. **\n**The second PC has a high percentage of those who are self-employed, a high percentage of those working at home, and high percentage of those working in unpaid family work. The second PC also has low number of women, low percentage of working in private industry, and low percentage of employed in office jobs. I would label this principal component as Working Class - Family Oriented. **\nSub-county Level:\nThis PC is interesting because all 26 variables are positive and relatively high, where most have loadings greater than .20. The first PC has a high percentage of Men, a high number of citizens, high percentage of those employed in private industry, high percentage of those who commute alone in a car, and a high percentage of those employed (+16). I would label this principal component as Working-Class.\nThe second PC has a high percentage of minorities, a high percentage of unemployment, and high percentage of child poverty and under poverty level. The second PC also has low percentage of those who work from home, low percentage of inpaid family work, and low percentage of those who are self-employed. I would label this principal component as Under Poverty Level.\n**It\u0026rsquo;s usually important to both center and scale your variables as they are most likely not on the same metric. As in this case, I center and scaled the dataset because some variables are count and others are percentages. Either way, it doesn\u0026rsquo;t hurt. **\nDetermine the minimum number of PCs needed to capture 90% of the variance for both the county and sub-county analyses. Plot the proportion of variance explained and cumulative variance explained for both county and sub-county analyses.  County Level:\nAt least 13 PCs are needed to capture 90% of the variance for the county analysis.\nSub-County Level:\n**At least *7* PCs are needed to capture 90% of the variance for the sub-county analysis.**\rWith census_ct, perform hierarchical clustering with complete linkage. Cut the tree to partition the observations into 10 clusters. Re-run the hierarchical clustering algorithm using the first 5 principal components the county-level data as inputs instead of the original features. Compare and contrast the results. For both approaches investigate the cluster that contains San Mateo County. Which approach seemed to put San Mateo County in a more appropriate cluster? Comment on what you observe and discuss possible explanations for these observations.  Hierarchical Clustering:\n## # A tibble: 10 x 2\r## clusters n\r## \u0026lt;fct\u0026gt; \u0026lt;int\u0026gt;\r## 1 cluster 1 2307\r## 2 cluster 2 779\r## 3 cluster 3 67\r## 4 cluster 4 8\r## 5 cluster 5 20\r## 6 cluster 6 4\r## 7 cluster 7 3\r## 8 cluster 8 3\r## 9 cluster 9 23\r## 10 cluster 10 4\r Cluster for San Mateo County:\n## [1] cluster 1\r## 10 Levels: cluster 1 cluster 2 cluster 3 cluster 4 cluster 5 ... cluster 10\r Hierarchical Clustering for first five PCs:\n## # A tibble: 10 x 2\r## clusters n\r## \u0026lt;fct\u0026gt; \u0026lt;int\u0026gt;\r## 1 cluster 1 1950\r## 2 cluster 2 631\r## 3 cluster 3 312\r## 4 cluster 4 57\r## 5 cluster 5 8\r## 6 cluster 6 167\r## 7 cluster 7 43\r## 8 cluster 8 7\r## 9 cluster 9 40\r## 10 cluster 10 3\r Cluster for San Mateo County:\n## [1] cluster 3\r## 10 Levels: cluster 1 cluster 2 cluster 3 cluster 4 cluster 5 ... cluster 10\r It seems that the counties in the PC cluster are more evenly spread out than using the entire dataset. When using the first 5 principal components, we are capturing 64% of the variance in the county dataset with only five variables. Because of the smaller dimension, it may be more effective in clustering the counties as opposed to using 26 variables with the full dataset. It makes sense that San Mateo county is put into cluster 1 with the full dataset as most counties are grouped there. Thus, we may want to rely on the cluster that used the PCs, where San Mateo is in cluster 3.\nClassification In order to train classification models, we need to combine county_winner and census_ct data. This seemingly straightforward task is harder than it sounds. Codes are provided in the .Rmd file that make the necessary changes to merge them into election_cl for classification.\nAfter merging the data, partition the result into 80% training and 20% testing partitions.\nDecision tree: train a decision tree on the training partition, and apply cost-complexity pruning. Visualize the tree before and after pruning. Estimate the misclassification errors on the test partition, and interpret and discuss the results of the decision tree analysis. Use your plot to tell a story about voting behavior in the US (see this NYT infographic).  ## ## Classification tree:\r## tree(formula = as.factor(candidate) ~ ., data = train, control = tree_opts, ## split = \u0026quot;deviance\u0026quot;)\r## Variables actually used in tree construction:\r## [1] \u0026quot;White\u0026quot; \u0026quot;Men\u0026quot; \u0026quot;Unemployment\u0026quot; \u0026quot;IncomePerCapErr\u0026quot;\r## [5] \u0026quot;MeanCommute\u0026quot; \u0026quot;Service\u0026quot; \u0026quot;Women\u0026quot; \u0026quot;Citizen\u0026quot; ## [9] \u0026quot;IncomePerCap\u0026quot; \u0026quot;Drive\u0026quot; \u0026quot;Transit\u0026quot; \u0026quot;Office\u0026quot; ## [13] \u0026quot;Production\u0026quot; \u0026quot;SelfEmployed\u0026quot; \u0026quot;Income\u0026quot; \u0026quot;WorkAtHome\u0026quot; ## [17] \u0026quot;Poverty\u0026quot; \u0026quot;Employed\u0026quot; \u0026quot;Carpool\u0026quot; \u0026quot;Professional\u0026quot; ## [21] \u0026quot;PrivateWork\u0026quot; \u0026quot;OtherTransp\u0026quot; \u0026quot;FamilyWork\u0026quot; ## Number of terminal nodes: 84 ## Residual mean deviance: 0.04184 = 99.29 / 2373 ## Misclassification error rate: 0.008547 = 21 / 2457\r Tree before pruning:\nAdd cost-complexity pruning:\n## ## Classification tree:\r## snip.tree(tree = t_small, nodes = c(4L, 14L, 5L, 15L, 6L))\r## Variables actually used in tree construction:\r## [1] \u0026quot;White\u0026quot; \u0026quot;Men\u0026quot; \u0026quot;Transit\u0026quot; \u0026quot;Professional\u0026quot;\r## Number of terminal nodes: 5 ## Residual mean deviance: 0.4521 = 1108 / 2452 ## Misclassification error rate: 0.0814 = 200 / 2457\r Tree after pruning:\nClassification Errors on Test Partition - Before Pruning:\n## pred\r## class Donald Trump Hillary Clinton\r## Donald Trump 0.9496124 0.0503876\r## Hillary Clinton 0.3505155 0.6494845\r Classification Errors on Test Partition - After Pruning:\n## pred\r## class Donald Trump Hillary Clinton\r## Donald Trump 0.94379845 0.05620155\r## Hillary Clinton 0.44329897 0.55670103\r After training a decision tree before pruning, the resulting classification tree had 84 terminal nodes and a misclassification error rate of 0.0085. There were 23 variables used. After pruning the classification tree, now there are 5 terminal nodes and a misclassifcation error rate of 0.0814. There were four variables used: White, Men, Transit, Professional. Similar to the infographic, it\u0026rsquo;s not surprising that \u0026ldquo;White\u0026rdquo; is used as the first splitting variable and Men is one of the second spliting variables. Counties that are less than 49.969% White and less than 49.6965 Male were likely to vote for Hillary Clinton. Which makes sense given the demographics of the election results, however it isn\u0026rsquo;t very telling as splitting on almost 50% isn\u0026rsquo;t much information. On the other side of the decision tree, counties that are more than almost 50% white, more than 1.138% use public transportation, and more than 35.4651% are employed in management positions voted for Hillary. It\u0026rsquo;s interesting that counties that have more than 1.138% of people using public transit are likely to vote Trump. It may indicate that the model needs some adjustments since the misclassification error rate is higher for this model.\nTrain a logistic regression model on the training partition to predict the winning candidate in each county and estimate errors on the test partition. What are the significant variables? Are these consistent with what you observed in the decision tree analysis? Interpret the meaning of one or two significant coefficients of your choice in terms of a unit change in the variables. Did the results in your particular county (from question 14) match the predicted results?  ## ## Call:\r## glm(formula = as.factor(candidate) ~ ., family = \u0026quot;binomial\u0026quot;, ## data = train)\r## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -3.9700 -0.2610 -0.1094 -0.0414 3.5310 ## ## Coefficients:\r## Estimate Std. Error z value Pr(\u0026gt;|z|) ## (Intercept) -1.230e+01 9.576e+00 -1.284 0.199042 ## Men -3.202e-02 5.466e-02 -0.586 0.558020 ## Women 4.849e-05 1.675e-04 0.289 0.772235 ## White -1.876e-01 6.417e-02 -2.924 0.003453 ** ## Citizen 1.139e-01 2.934e-02 3.881 0.000104 ***\r## Income -5.835e-05 2.752e-05 -2.120 0.033970 * ## IncomeErr 4.269e-05 6.807e-05 0.627 0.530554 ## IncomePerCap 1.900e-04 6.601e-05 2.879 0.003991 ** ## IncomePerCapErr -2.421e-04 1.405e-04 -1.723 0.084840 . ## Poverty 4.498e-02 4.267e-02 1.054 0.291820 ## ChildPoverty -4.893e-03 2.611e-02 -0.187 0.851348 ## Professional 2.568e-01 3.852e-02 6.665 2.64e-11 ***\r## Service 3.509e-01 4.974e-02 7.055 1.73e-12 ***\r## Office 1.209e-01 4.660e-02 2.595 0.009448 ** ## Production 1.849e-01 4.262e-02 4.337 1.44e-05 ***\r## Drive -2.236e-01 4.639e-02 -4.821 1.43e-06 ***\r## Carpool -2.164e-01 6.138e-02 -3.525 0.000423 ***\r## Transit 4.788e-02 9.227e-02 0.519 0.603815 ## OtherTransp -9.843e-02 1.018e-01 -0.967 0.333650 ## WorkAtHome -1.356e-01 7.447e-02 -1.821 0.068677 . ## MeanCommute 5.417e-02 2.500e-02 2.167 0.030224 * ## Employed 1.960e-01 3.376e-02 5.807 6.36e-09 ***\r## PrivateWork 7.211e-02 2.230e-02 3.233 0.001224 ** ## SelfEmployed 1.535e-02 4.992e-02 0.308 0.758415 ## FamilyWork -8.790e-01 4.130e-01 -2.128 0.033336 * ## Unemployment 1.742e-01 4.075e-02 4.275 1.91e-05 ***\r## Minority -6.081e-02 6.186e-02 -0.983 0.325579 ## ---\r## Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r## ## (Dispersion parameter for binomial family taken to be 1)\r## ## Null deviance: 2071.81 on 2456 degrees of freedom\r## Residual deviance: 841.25 on 2430 degrees of freedom\r## AIC: 895.25\r## ## Number of Fisher Scoring iterations: 7\r Errors (Test Partition):\n## y_hat_glm\r## No Yes\r## Donald Trump 0.95930233 0.04069767\r## Hillary Clinton 0.32989691 0.67010309\r Significant predictors of candidate are White, Citizen, Income, IncomePerCap, Professional, Service, Office, Production, Drive, Carpool, MeanCommute, Employed, PrivateWork, FamilyWork, and Unemployement. Only one of the variables overlap with the variables chosen in the pruned decision tree which is inconsistent.\nThe probability of a county voting for Donald Trump increases by an estimated 0.1139 among counties with Citizens, after accounting for all other predictors.\nThe probability of a county voting for Donald Trump decreases by an estimated -.879 among counties with unpaid family workers, after accounting for all other predictors.\nYes, the results in Los Angeles county (Hillary Clinton) matched the predicted results.\nCompute ROC curves for the decision tree and logistic regression using predictions on the test data, and display them on the same plot. Based on your classification results, discuss the pros and cons of each method. Are the different classifiers more appropriate for answering different kinds of questions about the election?  Decision Tree:\nLogistic Regression:\nBoth ROC curves look very different, with the logistic curve looking cleaner and has a higher optimal threshold. Both analyses have pros and cons and different classifiers are more appropriate for answering different kinds of questions about the election. Regarding decision trees, as we saw in the output, they are intuitive and easy to implement visualize and interpret. They also have the ability to be pruned by cost complexity. However, they are sensitive to small changes in the data, have high variance, and could fail if they separation in the feature space is hard to approximate. I think working with this scale of data is difficult to implement decision trees with because there is a lot of variability in data. Regarding logistic regression, they are interpretable, flexible, and can take in a large number of predictors. However, like decision trees, they can fail if data are separated in the feature space.\nTaking it further This is an open question. Interpret and discuss any overall insights gained in this analysis and possible explanations. Use any tools at your disposal to make your case: visualize errors on the map, discuss what does or doesn\u0026rsquo;t seem reasonable based on your understanding of these methods, propose possible directions (for example, collecting additional data or domain knowledge). In addition, propose and tackle at least one more interesting question. Creative and thoughtful analyses will be rewarded!  As mentioned previously, both analyses have pros and cons and different classifiers are more appropriate for answering different kinds of questions about the election. In this example, it is shown that the logistic model performed better, providing a better misclassification error rate. I think the model would perform even better with theory-based predictors as that can influence the model, more predictors doesn\u0026rsquo;t necessarily mean better.\n Instead of using the native attributes (the original features), we can use principal components to create new (and lower dimensional) sets of features with which to train a classification model. This sometimes improves classification performance. Compare classifiers trained on the original features with those trained on PCA features.  I like the idea of using PC components to reevaluate the classification methods used. The minimum number of PCs needed to capture 90% of the variance for county data is 13, however, using 13 components makes interpretation tricky, as evaluating and labeling all 13 will be extremely time-consulting. To assess differences in bias-variance trade off between using PC and raw data, I will rerun both the decision tree analysis and the logistic regress using the first 4 principal components to predict the election results and compare.\nRerun PCs with combined county_winner column for easier wrangling:\nNote: Eigenvalues are slightly off because some observations were removed in the process of combining county_winner and census_ct but they are generally the same.\nPC 1/Affluent: High IncomePerCap, Employed, Income, and Professional. Low Child Poverty, Poverty, and Unemployment.\nPC 2/Family Oriented: High SelfEmployed, WorkAtHome, and FamilyWork. Low Women, PrivateWork, IncomeErr.\nPC 3/Working Class in Suburb: High White, Drive, Production, and Private Work. Low Minority, and Transit.\n*PC 4/Working Class in City *: High Carpool, Production, Employed. Low Citizen, Service, Office.\nDecision Tree:\n## ## Classification tree:\r## tree(formula = as.factor(candidate) ~ ., data = train, control = tree_opts, ## split = \u0026quot;deviance\u0026quot;)\r## Number of terminal nodes: 56 ## Residual mean deviance: 0.3242 = 778.3 / 2401 ## Misclassification error rate: 0.0639 = 157 / 2457\r Tree before pruning:\nAdd cost-complexity pruning:\n## ## Classification tree:\r## snip.tree(tree = t_small, nodes = c(10L, 7L, 54L, 55L, 26L, 91L, ## 23L, 25L, 90L, 9L))\r## Number of terminal nodes: 13 ## Residual mean deviance: 0.4694 = 1147 / 2444 ## Misclassification error rate: 0.09565 = 235 / 2457\r Tree after pruning:\nClassification Errors on Test Partition - Before Pruning:\n## pred\r## class Donald Trump Hillary Clinton\r## Donald Trump 0.95348837 0.04651163\r## Hillary Clinton 0.49484536 0.50515464\r Classification Errors on Test Partition - After Pruning:\n## pred\r## class Donald Trump Hillary Clinton\r## Donald Trump 0.93410853 0.06589147\r## Hillary Clinton 0.51546392 0.48453608\r After training a decision tree before pruning, the resulting classification tree had 56 terminal nodes and a misclassification error rate of 0.0639. The four PCs were used. Already, we see that the misclassifciation error is much higher than using the full dataset shown earlier. After pruning the classification tree, now there are 13 terminal nodes and a misclassifcation error rate of 0.09565. Compared to the full dataset the pruned decision tree had less terminal nodes (5), but the misclassification error rate was slightly similar (0.08). The interpretation is slightly different now that we have to identify the PC on the tree. For example, if the loading on PC3 is less than -.610 (or in this case less affluent counties) and the loading on PC2 is less than -1.47912 (or in this case less family oriented counties), and the loading on PC3 is less than -3.40997 (even less affleunt counties) then it is likely they voted for Hillary Clinton. Already, this interpretation is extremely confusing compared to using all predictors.\nLogistic Regression:\n## ## Call:\r## glm(formula = as.factor(candidate) ~ ., family = \u0026quot;binomial\u0026quot;, ## data = train)\r## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -3.1258 -0.4289 -0.2081 -0.1065 3.3147 ## ## Coefficients:\r## Estimate Std. Error z value Pr(\u0026gt;|z|) ## (Intercept) -2.76655 0.11026 -25.091 \u0026lt; 2e-16 ***\r## PC1 -0.05276 0.02655 -1.987 0.0469 * ## PC2 -0.64696 0.04784 -13.523 \u0026lt; 2e-16 ***\r## PC3 -0.86938 0.05006 -17.368 \u0026lt; 2e-16 ***\r## PC4 -0.39303 0.06011 -6.538 6.23e-11 ***\r## ---\r## Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r## ## (Dispersion parameter for binomial family taken to be 1)\r## ## Null deviance: 2071.8 on 2456 degrees of freedom\r## Residual deviance: 1262.3 on 2452 degrees of freedom\r## AIC: 1272.3\r## ## Number of Fisher Scoring iterations: 6\r All four PCs are significant predictors of candidate. And it looks like all for PCs have similar interpretation: the probability of a county voting for Donald Trump decreases for each PC estimate. This was not the case when all variables were entered in the logistic model.\nErrors (Test Partition):\n## y_hat_glm\r## No Yes\r## Donald Trump 0.95155039 0.04844961\r## Hillary Clinton 0.52577320 0.47422680\r The true positve for Hillary Clinton in the model is a lot less than the model with all variables, however.\nROC Curves:\nDecision Tree:\nLogistic Regression:\nOverall, it seems like using the first four principal components did not improve neither the decision tree or logistic regression model. This could be due to many factors but the main one I can think of is that the first four PCs only capture 59% of the variance in the variables. The decision tree did not make sense to use even if it had a better misclassification rate as the interpretability of the tree did not as much sense as the model with all variables. While the logistic model did have all significant predictors, the error rate was much higher than the model with all variables, but less predictors were used. In the future, I would select variables based on theory, use PCA to reduce the dimensions and capture more variance than I did now, and then re-run the model.\n","date":1615766400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1639526862,"objectID":"8f476012904688083ba85da34fc035a4","permalink":"https://dinaarch.netlify.app/post/machine-learning-final-project/","publishdate":"2021-03-15T00:00:00Z","relpermalink":"/post/machine-learning-final-project/","section":"post","summary":"Background The U.S. presidential election in 2012 did not come as a surprise. Some correctly predicted the outcome of the election correctly including Nate Silver, and many speculated about his approach.","tags":["r markdown","machine learning","visualization","classification","principal components"],"title":"Machine Learning - Final Project","type":"post"},{"authors":[],"categories":"R Project","content":"Parameter Estimation - Wild Fish Catch Source: Source: Global wild fish catch and aquaculture production, compiled by Earth Policy Institute within 1950-2010 from U.N. Food and Agriculture Organization (FAO), Global Capture Production and Global Aquaculture Production, electronic databases, at www.fao.org/fishery/topic/16140/en.\n‚ÄúFor Task 2, you will find an equation with parameters estimated by nonlinear least squares for the increase in global wild fish catch from 1950 ‚Äì 2012.‚Äù\nData Wrangling Read in data and recode year for analysis set up:\nfish_df \u0026lt;- read_csv(\u0026quot;fish_catch.csv\u0026quot;) %\u0026gt;% mutate(year_coded = 0:62) #recoded year for analyses\r A \u0026amp; B. Graph of wild catch over time Create an exploratory graph over wild catch over time:\nfish_df %\u0026gt;% ggplot(aes(x = year, y = wild_catch_mil_tons)) +\rgeom_point() +\rtheme_minimal() +\rlabs(x = \u0026quot;Years\u0026quot;, y = \u0026quot;Wild Catch (Million Tons)\u0026quot;, title = \u0026quot;Wild Catch Over Time (Years)\u0026quot;)\r #Log transformed\rfish_df %\u0026gt;% ggplot(aes(x = year, y = log(wild_catch_mil_tons))) +\rgeom_point() +\rtheme_minimal() +\rlabs(x = \u0026quot;Years\u0026quot;, y = \u0026quot;ln(Wild Catch)\u0026quot;, title = \u0026quot;Wild Catch Over Time (Years)\u0026quot;)\r In this plot of wild catch over time, a possible logistic growth relatiosnhip describes the trend:\n$$P(t) = \\frac{K} {1 + Ae^{-kt}}$$ where\n$$A = \\frac{K - P_0} {P_0}$$\nMy initial estimates for the parameters in the model are: \\(K\\) = 90, \\(P_0\\) = 20, \\(k\\) = .05, \\(A\\) = 3.5.\nC. Nonlinear least squares Using nonlinear least squares (NLS) to find parameters for the wild catch model. First, we estimate \\(k\\):\ndf_exp \u0026lt;- fish_df %\u0026gt;% filter(year \u0026lt; 1990) %\u0026gt;% mutate(ln_fish = log(wild_catch_mil_tons))\rlm_k \u0026lt;- lm(ln_fish ~ year, data = df_exp)\rlm_k\r ## ## Call:\r## lm(formula = ln_fish ~ year, data = df_exp)\r## ## Coefficients:\r## (Intercept) year ## -66.38553 0.03562\r # Coefficient (k) ~ 0.04\r The initial coefficient \\(k\\) = 0.4.\nThen, we use stats::nls() with the estimated starting parameter values:\ndf_nls \u0026lt;- nls(wild_catch_mil_tons ~ K/(1 + A*exp(-r*year_coded)),\rdata = fish_df,\rstart = list(K = 90, A = 3.5, r = 0.4),\rtrace = FALSE\r)\r# See the model summary\r#summary(df_nls)\r# Use broom:: functions to get model outputs in tidier format: model_out \u0026lt;- broom::tidy(df_nls) model_out %\u0026gt;% gt()\r html {\rfont-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\r}\r#ppreqatnez .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; }\n#ppreqatnez .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n#ppreqatnez .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }\n#ppreqatnez .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; }\n#ppreqatnez .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }\n#ppreqatnez .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n#ppreqatnez .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }\n#ppreqatnez .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }\n#ppreqatnez .gt_column_spanner_outer:first-child { padding-left: 0; }\n#ppreqatnez .gt_column_spanner_outer:last-child { padding-right: 0; }\n#ppreqatnez .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; }\n#ppreqatnez .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; }\n#ppreqatnez .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; }\n#ppreqatnez .gt_from_md \u0026gt; :first-child { margin-top: 0; }\n#ppreqatnez .gt_from_md \u0026gt; :last-child { margin-bottom: 0; }\n#ppreqatnez .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; }\n#ppreqatnez .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; }\n#ppreqatnez .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; }\n#ppreqatnez .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; }\n#ppreqatnez .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; }\n#ppreqatnez .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; }\n#ppreqatnez .gt_striped { background-color: rgba(128, 128, 128, 0.05); }\n#ppreqatnez .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }\n#ppreqatnez .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }\n#ppreqatnez .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; }\n#ppreqatnez .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }\n#ppreqatnez .gt_sourcenote { font-size: 90%; padding: 4px; }\n#ppreqatnez .gt_left { text-align: left; }\n#ppreqatnez .gt_center { text-align: center; }\n#ppreqatnez .gt_right { text-align: right; font-variant-numeric: tabular-nums; }\n#ppreqatnez .gt_font_normal { font-weight: normal; }\n#ppreqatnez .gt_font_bold { font-weight: bold; }\n#ppreqatnez .gt_font_italic { font-style: italic; }\n#ppreqatnez .gt_super { font-size: 65%; }\n#ppreqatnez .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } \n\rterm\restimate\rstd.error\rstatistic\rp.value\r\r\rK\r100.27835748\r2.734132433\r36.67648\r8.569260e-43\rA\r4.31633154\r0.292941193\r14.73446\r1.340788e-21\rr\r0.06988688\r0.004648183\r15.03531\r5.141952e-22\r\r\r\rThe model with estimated parameters for wild catch over time is: $$P(t) = \\frac{100.3}{1+4.32e^{-0.07t}}$$\nD) Visualize model showing both original data and model output # Make predictions for the wild catch at years: p_predict \u0026lt;- predict(df_nls)\r# Bind predictions to original data frame:\rdf_complete \u0026lt;- data.frame(fish_df, p_predict)\r# Plot them all together:\rggplot(data = df_complete, aes(x = year, y = wild_catch_mil_tons)) +\rgeom_point() +\rgeom_line(aes(x = year, y = p_predict)) +\rtheme_calc() +\rscale_x_continuous(breaks = seq(1950, 2012, 10)) +\rlabs(title = \u0026quot;Wild Catch (Million Tons) Over Time\u0026quot;, x = \u0026quot;Year\u0026quot;, y = \u0026quot;Wild Catch (Million Tons)\u0026quot;)\r ","date":1615766400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1639533404,"objectID":"43645a4bc0c093ec7c80442ccb7a35cf","permalink":"https://dinaarch.netlify.app/post/nonlinear-least-squares-example/","publishdate":"2021-03-15T00:00:00Z","relpermalink":"/post/nonlinear-least-squares-example/","section":"post","summary":"Parameter Estimation - Wild Fish Catch Source: Source: Global wild fish catch and aquaculture production, compiled by Earth Policy Institute within 1950-2010 from U.N. Food and Agriculture Organization (FAO), Global Capture Production and Global Aquaculture Production, electronic databases, at www.","tags":["r markdown","data analysis","visualization"],"title":"Nonlinear Least Squares Example","type":"post"},{"authors":[],"categories":"R Project","content":"The Office - Season 4 x Episode 9: The Dinner Party    This exercise is atext and sentiment analysis on the \u0026ldquo;Dinner Party\u0026rdquo; episode of The Office. The assignment was given in Dr. Allison Horst\u0026rsquo;s ESM 244 course.\nRead in the text transcript Source: https://www.officequotes.net/no4-09.php\ndinner_text \u0026lt;- read_delim(here(\u0026quot;content\u0026quot;,\u0026quot;post\u0026quot;, \u0026quot;2021-12-14-text-analysis\u0026quot;, \u0026quot;dinnerparty2.txt\u0026quot;), \u0026quot;\\t\u0026quot;, escape_double = FALSE, col_names = FALSE, trim_ws = TRUE) %\u0026gt;% rename(lines = X1)\r  Each row is a a line of the transcript for each character.  Example: First line from the episode is from Stanley Hudson:\ndinner_line1 \u0026lt;- dinner_text[1,]\rdinner_line1  ## # A tibble: 1 x 1\r## lines ## \u0026lt;chr\u0026gt; ## 1 Stanley: This is ridiculous.\r Tidy Data  I separated the character names and their lines into two columns, character and line, separated by colon. Removed the last four rows that are not character\u0026rsquo;s lines but stage direction. I filtered the characters to include the characters that spoke the most words.  dinner_tidy \u0026lt;- dinner_text %\u0026gt;% separate(col = lines, into = c(\u0026quot;character\u0026quot;, \u0026quot;line\u0026quot;), sep = \u0026quot;:\u0026quot;) %\u0026gt;% slice(-(283:288)) %\u0026gt;% filter(character %in% c(\u0026quot;Andy\u0026quot;, \u0026quot;Angela\u0026quot;, \u0026quot;Dwight\u0026quot;, \u0026quot;Michael\u0026quot;, \u0026quot;Hunter's CD\u0026quot;, \u0026quot;Jan\u0026quot;, \u0026quot;Jim\u0026quot;, \u0026quot;Pam\u0026quot;))  Tokenize Here, we get word counts for each character for the episode.\ndinner_tokens \u0026lt;- dinner_tidy %\u0026gt;% unnest_tokens(word, line)  dinner_wordcount \u0026lt;- dinner_tokens %\u0026gt;% count(character, word)\r Remove stop words Most of the words in the transcript are stop words. To remove them, we use anti_join and the stop_words function.\ndinner_nonstop_words \u0026lt;- dinner_tokens %\u0026gt;% anti_join(stop_words)\r We then recount with the stopwords removed.\nnonstop_counts \u0026lt;- dinner_nonstop_words %\u0026gt;% count(character, word)  Top 10 Words Here, we find the top 10 words that each character said during that episode.\ntop_10_words \u0026lt;- nonstop_counts %\u0026gt;% group_by(character) %\u0026gt;% arrange(-n) %\u0026gt;% slice(1:10)\rtop_10_words %\u0026gt;% group_by(word) %\u0026gt;% ggplot() +\rgeom_bar(aes(reorder(word, n), n), stat = 'identity', fill = \u0026quot;red\u0026quot;) +\rfacet_wrap(~character, scales = \u0026quot;free\u0026quot;) +\rcoord_flip() +\rtheme_calc() +\rlabs(x = 'word')\r Word Cloud Let\u0026rsquo;s make a word cloud for the top 5 characters who spoke the most:\nMichael, Jan, Jim, Pam, Dwight\nnonstop_counts %\u0026gt;% group_by(character) %\u0026gt;% count() %\u0026gt;% arrange(desc(n))  ## # A tibble: 8 x 2\r## # Groups: character [8]\r## character n\r## \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt;\r## 1 Michael 275\r## 2 Jan 190\r## 3 Jim 88\r## 4 Pam 72\r## 5 Dwight 38\r## 6 Angela 21\r## 7 Andy 20\r## 8 Hunter's CD 4\r dinner_top5 \u0026lt;- nonstop_counts %\u0026gt;% filter(character %in% c(\u0026quot;Michael\u0026quot;, \u0026quot;Jan\u0026quot;, \u0026quot;Jim\u0026quot;, \u0026quot;Pam\u0026quot;, \u0026quot;Dwight\u0026quot;)) %\u0026gt;% group_by(character) %\u0026gt;% arrange(-n) %\u0026gt;% slice(1:20)\r cloud \u0026lt;- ggplot(data = dinner_top5, aes(label = word)) +\rgeom_text_wordcloud(aes(color = n, size = n), shape = \u0026quot;diamond\u0026quot;) +\rscale_size_area(max_size = 6) +\rscale_color_gradientn(colors = c(\u0026quot;red\u0026quot;,\u0026quot;blue\u0026quot;,\u0026quot;darkgreen\u0026quot;)) +\rfacet_wrap(~character) +\rtheme_calc()\rcloud\r Sentiment Analysis #afinn lexicon\rget_sentiments(lexicon = \u0026quot;afinn\u0026quot;)\r Sentiment analysis with afinn: First, bind words in dinner_nonstop_words to afinn lexicon:\ndinner_afinn \u0026lt;- dinner_nonstop_words %\u0026gt;% inner_join(get_sentiments(\u0026quot;afinn\u0026quot;))\r Then, we find counts based on afinn lexicon and plot them:\nafinn_counts \u0026lt;- dinner_afinn %\u0026gt;% count(character, value)\r# Plot them: ggplot(data = afinn_counts, aes(x = value, y = n)) +\rgeom_col(fill = \u0026quot;blue\u0026quot;) +\rfacet_wrap(~character) +\rtheme_calc() +\rlabs(y = \u0026quot;\u0026quot;, x = \u0026quot;Lexicon Value\u0026quot;)\r # Find the mean afinn score by characeter: afinn_means \u0026lt;- dinner_afinn %\u0026gt;% group_by(character) %\u0026gt;% summarize(mean_afinn = mean(value))\rggplot(data = afinn_means, aes(x = fct_rev(as.factor(character)), y = mean_afinn)) +\rgeom_col(fill = \u0026quot;blue\u0026quot;) +\rcoord_flip() +\rtheme_calc() +\rlabs(x = \u0026quot;Character\u0026quot;, y = \u0026quot;Mean\u0026quot;)\r ","date":1614124800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1639538764,"objectID":"ca184af97722218572e738c23673fe1f","permalink":"https://dinaarch.netlify.app/post/text-analysis/","publishdate":"2021-02-24T00:00:00Z","relpermalink":"/post/text-analysis/","section":"post","summary":"The Office - Season 4 x Episode 9: The Dinner Party    This exercise is atext and sentiment analysis on the \u0026ldquo;Dinner Party\u0026rdquo; episode of The Office. The assignment was given in Dr.","tags":["text analysis","visualization","sentiment analysis"],"title":"Text Anaylsis ft. Michael Scott","type":"post"},{"authors":["Dina Naji Arch"],"categories":null,"content":" Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1554595200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554595200,"objectID":"557dc08fd4b672a0c08e0a8cf0c9ff7d","permalink":"https://dinaarch.netlify.app/publication/preprint/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/preprint/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example preprint / working paper","type":"publication"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)   Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  **Two**  Three   A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/media/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}   Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }   Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://dinaarch.netlify.app/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":null,"content":"","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"d1311ddf745551c9e117aa4bb7e28516","permalink":"https://dinaarch.netlify.app/project/external-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/external-project/","section":"project","summary":"An example of linking directly to an external project website using `external_link`.","tags":["Demo"],"title":"External Project","type":"project"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"8f66d660a9a2edc2d08e68cc30f701f7","permalink":"https://dinaarch.netlify.app/project/internal-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/internal-project/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Internal Project","type":"project"},{"authors":["Dina Naji Arch","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441065600,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"https://dinaarch.netlify.app/publication/journal-article/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/journal-article/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example journal article","type":"publication"},{"authors":["Dina Naji Arch","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"69425fb10d4db090cfbd46854715582c","permalink":"https://dinaarch.netlify.app/publication/conference-paper/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/conference-paper/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example conference paper","type":"publication"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"f26b5133c34eec1aa0a09390a36c2ade","permalink":"https://dinaarch.netlify.app/admin/config.yml","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/admin/config.yml","section":"","summary":"","tags":null,"title":"","type":"wowchemycms"}]